{
  "version": 3,
  "sources": ["../../@simonwep/pickr/dist/webpack:/webpack/universalModuleDefinition", "../../@simonwep/pickr/dist/webpack:/webpack/bootstrap", "../../@simonwep/pickr/dist/webpack:/webpack/runtime/define property getters", "../../@simonwep/pickr/dist/webpack:/webpack/runtime/hasOwnProperty shorthand", "../../@simonwep/pickr/dist/webpack:/webpack/runtime/make namespace object", "../../@simonwep/pickr/dist/webpack:/src/js/utils/utils.js", "../../@simonwep/pickr/dist/webpack:/src/js/utils/color.js", "../../@simonwep/pickr/dist/webpack:/src/js/utils/hsvacolor.js", "../../@simonwep/pickr/dist/webpack:/src/js/libs/moveable.js", "../../@simonwep/pickr/dist/webpack:/src/js/libs/selectable.js", "../../@simonwep/pickr/dist/webpack:/src/js/template.js", "../../@simonwep/pickr/dist/src/NanoPop.ts", "../../@simonwep/pickr/dist/webpack:/src/js/pickr.js"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(self, function() {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "/* eslint-disable prefer-rest-params */\r\nfunction eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\n/**\r\n * Creates an DOM-Element out of a string (Single element).\r\n * @param html HTML representing a single element\r\n * @returns {Element | null} The element.\r\n */\r\nexport function createElementFromString(html) {\r\n    const div = document.createElement('div');\r\n    div.innerHTML = html.trim();\r\n    return div.firstElementChild;\r\n}\r\n\r\n/**\r\n * Creates a new html element, every element which has\r\n * a ':ref' attribute will be saved in a object (which will be returned)\r\n * where the value of ':ref' is the object-key and the value the HTMLElement.\r\n *\r\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\r\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\r\n *\r\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\r\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\r\n * would be added to it.\r\n *\r\n * @param str - The HTML String.\r\n */\r\n\r\nexport function createFromTemplate(str) {\r\n\r\n    // Removes an attribute from a HTMLElement and returns the value.\r\n    const removeAttribute = (el, name) => {\r\n        const value = el.getAttribute(name);\r\n        el.removeAttribute(name);\r\n        return value;\r\n    };\r\n\r\n    // Recursive function to resolve template\r\n    const resolve = (element, base = {}) => {\r\n\r\n        // Check key and container attribute\r\n        const con = removeAttribute(element, ':obj');\r\n        const key = removeAttribute(element, ':ref');\r\n        const subtree = con ? (base[con] = {}) : base;\r\n\r\n        // Check and save element\r\n        key && (base[key] = element);\r\n        for (const child of Array.from(element.children)) {\r\n            const arr = removeAttribute(child, ':arr');\r\n            const sub = resolve(child, arr ? {} : subtree);\r\n\r\n            if (arr) {\r\n\r\n                // Check if there is already an array and add element\r\n                (subtree[arr] || (subtree[arr] = []))\r\n                    .push(Object.keys(sub).length ? sub : child);\r\n            }\r\n        }\r\n\r\n        return base;\r\n    };\r\n\r\n    return resolve(createElementFromString(str));\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) {\r\n        return path;\r\n    }\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) {\r\n        path.push(el);\r\n    }\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Resolves a HTMLElement by query.\r\n * @param val\r\n * @returns {null|Document|Element}\r\n */\r\nexport function resolveElement(val) {\r\n    if (val instanceof Element) {\r\n        return val;\r\n    } else if (typeof val === 'string') {\r\n        return val.split(/>>/g).reduce((pv, cv, ci, a) => {\r\n            pv = pv.querySelector(cv);\r\n            return ci < a.length - 1 ? pv.shadowRoot : pv;\r\n        }, document);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Creates the ability to change numbers in an input field with the scroll-wheel.\r\n * @param el\r\n * @param mapper\r\n */\r\nexport function adjustableInputNumbers(el, mapper = v => v) {\r\n\r\n    function handleScroll(e) {\r\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\r\n\r\n        let index = 0;\r\n        let off = el.selectionStart;\r\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\r\n\r\n            // Check if number is in cursor range and increase it\r\n            if (i <= off && i + v.length >= off) {\r\n                off = i;\r\n                return mapper(Number(v), inc, index);\r\n            }\r\n\r\n            index++;\r\n            return v;\r\n        });\r\n\r\n        el.focus();\r\n        el.setSelectionRange(off, off);\r\n\r\n        // Prevent default and trigger input event\r\n        e.preventDefault();\r\n        el.dispatchEvent(new Event('input'));\r\n    }\r\n\r\n    // Bind events\r\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\r\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\r\n}\r\n", "// Shorthands\r\nconst {min, max, floor, round} = Math;\r\n\r\n/**\r\n * Tries to convert a color name to rgb/a hex representation\r\n * @param name\r\n * @returns {string | CanvasGradient | CanvasPattern}\r\n */\r\nfunction standardizeColor(name) {\r\n\r\n    // Since invalid color's will be parsed as black, filter them out\r\n    if (name.toLowerCase() === 'black') {\r\n        return '#000';\r\n    }\r\n\r\n    const ctx = document.createElement('canvas').getContext('2d');\r\n    ctx.fillStyle = name;\r\n    return ctx.fillStyle === '#000' ? null : ctx.fillStyle;\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to RGB.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} Array with rgb values.\r\n */\r\nexport function hsvToRgb(h, s, v) {\r\n    h = (h / 360) * 6;\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    const i = floor(h);\r\n\r\n    const f = h - i;\r\n    const p = v * (1 - s);\r\n    const q = v * (1 - f * s);\r\n    const t = v * (1 - (1 - f) * s);\r\n\r\n    const mod = i % 6;\r\n    const r = [v, q, p, p, t, v][mod];\r\n    const g = [t, v, v, q, p, p][mod];\r\n    const b = [p, p, t, v, v, q][mod];\r\n\r\n    return [\r\n        r * 255,\r\n        g * 255,\r\n        b * 255\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to Hex.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {string[]} Hex values\r\n */\r\nexport function hsvToHex(h, s, v) {\r\n    return hsvToRgb(h, s, v).map(v =>\r\n        round(v).toString(16).padStart(2, '0')\r\n    );\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to CMYK.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} CMYK values\r\n */\r\nexport function hsvToCmyk(h, s, v) {\r\n    const rgb = hsvToRgb(h, s, v);\r\n    const r = rgb[0] / 255;\r\n    const g = rgb[1] / 255;\r\n    const b = rgb[2] / 255;\r\n\r\n    const k = min(1 - r, 1 - g, 1 - b);\r\n    const c = k === 1 ? 0 : (1 - r - k) / (1 - k);\r\n    const m = k === 1 ? 0 : (1 - g - k) / (1 - k);\r\n    const y = k === 1 ? 0 : (1 - b - k) / (1 - k);\r\n\r\n    return [\r\n        c * 100,\r\n        m * 100,\r\n        y * 100,\r\n        k * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert HSV spectrum to HSL.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param v Value\r\n * @returns {number[]} HSL values\r\n */\r\nexport function hsvToHsl(h, s, v) {\r\n    s /= 100;\r\n    v /= 100;\r\n\r\n    const l = (2 - s) * v / 2;\r\n\r\n    if (l !== 0) {\r\n        if (l === 1) {\r\n            s = 0;\r\n        } else if (l < 0.5) {\r\n            s = s * v / (l * 2);\r\n        } else {\r\n            s = s * v / (2 - l * 2);\r\n        }\r\n    }\r\n\r\n    return [\r\n        h,\r\n        s * 100,\r\n        l * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert RGB to HSV.\r\n * @param r Red\r\n * @param g Green\r\n * @param b Blue\r\n * @return {number[]} HSV values.\r\n */\r\nfunction rgbToHsv(r, g, b) {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    const minVal = min(r, g, b);\r\n    const maxVal = max(r, g, b);\r\n    const delta = maxVal - minVal;\r\n\r\n    let h, s;\r\n    const v = maxVal;\r\n    if (delta === 0) {\r\n        h = s = 0;\r\n    } else {\r\n        s = delta / maxVal;\r\n        const dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\r\n        const dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\r\n        const db = (((maxVal - b) / 6) + (delta / 2)) / delta;\r\n\r\n        if (r === maxVal) {\r\n            h = db - dg;\r\n        } else if (g === maxVal) {\r\n            h = (1 / 3) + dr - db;\r\n        } else if (b === maxVal) {\r\n            h = (2 / 3) + dg - dr;\r\n        }\r\n\r\n        if (h < 0) {\r\n            h += 1;\r\n        } else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n    }\r\n\r\n    return [\r\n        h * 360,\r\n        s * 100,\r\n        v * 100\r\n    ];\r\n}\r\n\r\n/**\r\n * Convert CMYK to HSV.\r\n * @param c Cyan\r\n * @param m Magenta\r\n * @param y Yellow\r\n * @param k Key (Black)\r\n * @return {number[]} HSV values.\r\n */\r\nfunction cmykToHsv(c, m, y, k) {\r\n    c /= 100;\r\n    m /= 100;\r\n    y /= 100;\r\n    k /= 100;\r\n\r\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\r\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\r\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\r\n\r\n    return [...rgbToHsv(r, g, b)];\r\n}\r\n\r\n/**\r\n * Convert HSL to HSV.\r\n * @param h Hue\r\n * @param s Saturation\r\n * @param l Lightness\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hslToHsv(h, s, l) {\r\n    s /= 100;\r\n    l /= 100;\r\n    s *= l < 0.5 ? l : 1 - l;\r\n\r\n    const ns = (2 * s / (l + s)) * 100;\r\n    const v = (l + s) * 100;\r\n    return [h, isNaN(ns) ? 0 : ns, v];\r\n}\r\n\r\n/**\r\n * Convert HEX to HSV.\r\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\r\n * @return {number[]} HSV values.\r\n */\r\nfunction hexToHsv(hex) {\r\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\r\n}\r\n\r\n/**\r\n * Try's to parse a string which represents a color to a HSV array.\r\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\r\n * @param str\r\n * @return {*}\r\n */\r\nexport function parseToHSVA(str) {\r\n\r\n    // Check if string is a color-name\r\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\r\n\r\n    // Regular expressions to match different types of color represention\r\n    const regex = {\r\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\r\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\r\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\r\n    };\r\n\r\n    /**\r\n     * Takes an Array of any type, convert strings which represents\r\n     * a number to a number an anything else to undefined.\r\n     * @param array\r\n     * @return {*}\r\n     */\r\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\r\n\r\n    let match;\r\n    invalid: for (const type in regex) {\r\n\r\n        // Check if current scheme passed\r\n        if (!(match = regex[type].exec(str))) {\r\n            continue;\r\n        }\r\n\r\n        // Match[2] does only contain a truly value if rgba, hsla, or hsla got matched\r\n        const alphaValid = a => (!!match[2] === (typeof a === 'number'));\r\n\r\n        // Try to convert\r\n        switch (type) {\r\n            case 'cmyk': {\r\n                const [, c, m, y, k] = numarize(match);\r\n\r\n                if (c > 100 || m > 100 || y > 100 || k > 100) {\r\n                    break invalid;\r\n                }\r\n\r\n                return {values: cmykToHsv(c, m, y, k), type};\r\n            }\r\n            case 'rgba': {\r\n                const [, , , r, g, b, a] = numarize(match);\r\n\r\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || !alphaValid(a)) {\r\n                    break invalid;\r\n                }\r\n\r\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\r\n            }\r\n            case 'hexa': {\r\n                let [, hex] = match;\r\n\r\n                if (hex.length === 4 || hex.length === 3) {\r\n                    hex = hex.split('').map(v => v + v).join('');\r\n                }\r\n\r\n                const raw = hex.substring(0, 6);\r\n                let a = hex.substring(6);\r\n\r\n                // Convert 0 - 255 to 0 - 1 for opacity\r\n                a = a ? (parseInt(a, 16) / 255) : undefined;\r\n\r\n                return {values: [...hexToHsv(raw), a], a, type};\r\n            }\r\n            case 'hsla': {\r\n                const [, , , h, s, l, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || !alphaValid(a)) {\r\n                    break invalid;\r\n                }\r\n\r\n                return {values: [...hslToHsv(h, s, l), a], a, type};\r\n            }\r\n            case 'hsva': {\r\n                const [, , , h, s, v, a] = numarize(match);\r\n\r\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || !alphaValid(a)) {\r\n                    break invalid;\r\n                }\r\n\r\n                return {values: [h, s, v, a], a, type};\r\n            }\r\n        }\r\n    }\r\n\r\n    return {values: null, type: null};\r\n}\r\n", "import {hsvToCmyk, hsvToHex, hsvToHsl, hsvToRgb} from './color';\r\n\r\n/**\r\n * Simple class which holds the properties\r\n * of the color represention model hsla (hue saturation lightness alpha)\r\n */\r\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\r\n    const mapper = (original, next) => (precision = -1) => {\r\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\r\n    };\r\n\r\n    const that = {\r\n        h, s, v, a,\r\n\r\n        toHSVA() {\r\n            const hsva = [that.h, that.s, that.v, that.a];\r\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsva;\r\n        },\r\n\r\n        toHSLA() {\r\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\r\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\r\n            return hsla;\r\n        },\r\n\r\n        toRGBA() {\r\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\r\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\r\n            return rgba;\r\n        },\r\n\r\n        toCMYK() {\r\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\r\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\r\n            return cmyk;\r\n        },\r\n\r\n        toHEXA() {\r\n            const hex = hsvToHex(that.h, that.s, that.v);\r\n\r\n            // Check if alpha channel make sense, convert it to 255 number space, convert\r\n            // To hex and pad it with zeros if needet.\r\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\r\n                .toString(16)\r\n                .toUpperCase().padStart(2, '0');\r\n\r\n            alpha && hex.push(alpha);\r\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\r\n            return hex;\r\n        },\r\n\r\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\r\n    };\r\n\r\n    return that;\r\n}\r\n", "import * as _ from '../utils/utils';\r\n\r\nconst clamp = v => Math.max(Math.min(v, 1), 0);\r\nexport default function Moveable(opt) {\r\n\r\n    const that = {\r\n\r\n        // Assign default values\r\n        options: Object.assign({\r\n            lock: null,\r\n            onchange: () => 0,\r\n            onstop: () => 0\r\n        }, opt),\r\n\r\n        _keyboard(e) {\r\n            const {options} = that;\r\n            const {type, key} = e;\r\n\r\n            // Check to see if the Movable is focused and then move it based on arrow key inputs\r\n            // For improved accessibility\r\n            if (document.activeElement === options.wrapper) {\r\n                const {lock} = that.options;\r\n                const up = key === 'ArrowUp';\r\n                const right = key === 'ArrowRight';\r\n                const down = key === 'ArrowDown';\r\n                const left = key === 'ArrowLeft';\r\n\r\n                if (type === 'keydown' && (up || right || down || left)) {\r\n                    let xm = 0;\r\n                    let ym = 0;\r\n\r\n                    if (lock === 'v') {\r\n                        xm = (up || right) ? 1 : -1;\r\n                    } else if (lock === 'h') {\r\n                        xm = (up || right) ? -1 : 1;\r\n                    } else {\r\n                        ym = up ? -1 : (down ? 1 : 0);\r\n                        xm = left ? -1 : (right ? 1 : 0);\r\n                    }\r\n\r\n                    that.update(\r\n                        clamp(that.cache.x + (0.01 * xm)),\r\n                        clamp(that.cache.y + (0.01 * ym))\r\n                    );\r\n                    e.preventDefault();\r\n                } else if (key.startsWith('Arrow')) {\r\n                    that.options.onstop();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        },\r\n\r\n        _tapstart(evt) {\r\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\r\n\r\n            if (evt.cancelable) {\r\n                evt.preventDefault();\r\n            }\r\n\r\n            // Trigger\r\n            that._tapmove(evt);\r\n        },\r\n\r\n        _tapmove(evt) {\r\n            const {options, cache} = that;\r\n            const {lock, element, wrapper} = options;\r\n            const b = wrapper.getBoundingClientRect();\r\n\r\n            let x = 0, y = 0;\r\n            if (evt) {\r\n                const touch = evt && evt.touches && evt.touches[0];\r\n                x = evt ? (touch || evt).clientX : 0;\r\n                y = evt ? (touch || evt).clientY : 0;\r\n\r\n                // Reset to bounds\r\n                if (x < b.left) {\r\n                    x = b.left;\r\n                } else if (x > b.left + b.width) {\r\n                    x = b.left + b.width;\r\n                }\r\n                if (y < b.top) {\r\n                    y = b.top;\r\n                } else if (y > b.top + b.height) {\r\n                    y = b.top + b.height;\r\n                }\r\n\r\n                // Normalize\r\n                x -= b.left;\r\n                y -= b.top;\r\n            } else if (cache) {\r\n                x = cache.x * b.width;\r\n                y = cache.y * b.height;\r\n            }\r\n\r\n            if (lock !== 'h') {\r\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\r\n            }\r\n\r\n            if (lock !== 'v') {\r\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\r\n            }\r\n\r\n            that.cache = {x: x / b.width, y: y / b.height};\r\n            const cx = clamp(x / b.width);\r\n            const cy = clamp(y / b.height);\r\n\r\n            switch (lock) {\r\n                case 'v':\r\n                    return options.onchange(cx);\r\n                case 'h':\r\n                    return options.onchange(cy);\r\n                default:\r\n                    return options.onchange(cx, cy);\r\n            }\r\n        },\r\n\r\n        _tapstop() {\r\n            that.options.onstop();\r\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\r\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\r\n        },\r\n\r\n        trigger() {\r\n            that._tapmove();\r\n        },\r\n\r\n        update(x = 0, y = 0) {\r\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\r\n\r\n            if (that.options.lock === 'h') {\r\n                y = x;\r\n            }\r\n\r\n            that._tapmove({\r\n                clientX: left + width * x,\r\n                clientY: top + height * y\r\n            });\r\n        },\r\n\r\n        destroy() {\r\n            const {options, _tapstart, _keyboard} = that;\r\n            _.off(document, ['keydown', 'keyup'], _keyboard);\r\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\r\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n                passive: false\r\n            });\r\n        }\r\n    };\r\n\r\n    // Initilize\r\n    const {options, _tapstart, _keyboard} = that;\r\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\r\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\r\n        passive: false\r\n    });\r\n\r\n    _.on(document, ['keydown', 'keyup'], _keyboard);\r\n\r\n    return that;\r\n}\r\n", "import * as _ from '../utils/utils';\n\nexport default function Selectable(opt = {}) {\n    opt = Object.assign({\n        onchange: () => 0,\n        className: '',\n        elements: []\n    }, opt);\n\n    const onTap = _.on(opt.elements, 'click', evt => {\n        opt.elements.forEach(e =>\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\n        );\n\n        opt.onchange(evt);\n\n        // Fix for https://github.com/Simonwep/pickr/issues/243\n        evt.stopPropagation();\n    });\n\n    return {\n        destroy: () => _.off(...onTap)\n    };\n}\n", "import * as _ from './utils/utils';\r\n\r\nexport default instance => {\r\n\r\n    const {\r\n        components,\r\n        useAsButton,\r\n        inline,\r\n        appClass,\r\n        theme,\r\n        lockOpacity\r\n    } = instance.options;\r\n\r\n    // Utils\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n    const t = str => instance._t(str);\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div :ref=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''} aria-label=\"${t('ui:dialog', 'color picker dialog')}\" role=\"window\">\r\n          <div class=\"pcr-selection\" ${hidden(components.palette)}>\r\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(components.preview)}>\r\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\" aria-label=\"${t('btn:last-color')}\"></button>\r\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"palette\" class=\"pcr-palette\" tabindex=\"0\" aria-label=\"${t('aria:palette')}\" role=\"listbox\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(components.hue)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\" tabindex=\"0\" aria-label=\"${t('aria:hue')}\" role=\"slider\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(components.opacity)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\" tabindex=\"0\" aria-label=\"${t('aria:opacity', 'opacity selection slider')}\" role=\"slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${components.palette ? '' : 'pcr-last'}\" :ref=\"swatches\"></div>\r\n\r\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(components.interaction).length)}>\r\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(components.interaction.input)} aria-label=\"${t('aria:input', 'color input field')}\">\r\n\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lockOpacity ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(components.interaction.hex)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lockOpacity ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(components.interaction.rgba)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lockOpacity ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(components.interaction.hsla)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lockOpacity ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(components.interaction.hsva)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(components.interaction.cmyk)}>\r\n\r\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${t('btn:save')}\" type=\"button\" ${hidden(components.interaction.save)} aria-label=\"${t('aria:btn:save')}\">\r\n            <input :ref=\"cancel\" class=\"pcr-cancel\" value=\"${t('btn:cancel')}\" type=\"button\" ${hidden(components.interaction.cancel)} aria-label=\"${t('aria:btn:cancel')}\">\r\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${t('btn:clear')}\" type=\"button\" ${hidden(components.interaction.clear)} aria-label=\"${t('aria:btn:clear')}\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Append method to find currently active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n};\r\n", "type Direction = 'top' | 'left' | 'bottom' | 'right';\n\nexport type VariantFlipOrder = {\n    start: string;\n    middle: string;\n    end: string;\n};\n\nexport type PositionFlipOrder = {\n    top: string;\n    right: string;\n    bottom: string;\n    left: string;\n};\n\nexport type NanoPopPosition =\n    'top-start' | 'top-middle' | 'top-end' |\n    'left-start' | 'left-middle' | 'left-end' |\n    'right-start' | 'right-middle' | 'right-end' |\n    'bottom-start' | 'bottom-middle' | 'bottom-end' | Direction;\n\nexport type NanoPopOptions = {\n    container: DOMRect;\n    position: NanoPopPosition;\n    variantFlipOrder: VariantFlipOrder;\n    positionFlipOrder: PositionFlipOrder;\n    margin: number;\n    reference?: HTMLElement;\n    popper?: HTMLElement;\n};\n\ntype AvailablePositions = {\n    t: number;\n    b: number;\n    l: number;\n    r: number;\n};\n\ntype AvailableVariants = {\n    vs: number;\n    vm: number;\n    ve: number;\n    hs: number;\n    hm: number;\n    he: number;\n};\n\ntype PositionPairs = [Direction, Direction];\nexport type PositionMatch = 'ts' | 'tm' | 'te' | 'bs' | 'bm' | 'be' | 'ls' | 'lm' | 'le' | 'rs' | 'rm' | 're';\n\nexport interface NanoPop {\n    update(updatedOptions?: Partial<NanoPopOptions>): PositionMatch | null;\n}\n\nexport interface NanoPopConstructor {\n\n    /**\n     * @param reference Reference element\n     * @param popper Actual popper element\n     * @param options Optional options\n     */\n    (reference: HTMLElement, popper: HTMLElement, options?: Partial<NanoPopOptions>): NanoPop;\n\n    /**\n     * @param options Partial options which get merged with the current one\n     */\n    (options?: Partial<NanoPopOptions>): NanoPop;\n}\n\n// Export current version\nexport const version = VERSION;\n\n// Export default\nexport const defaults = {\n    variantFlipOrder: {start: 'sme', middle: 'mse', end: 'ems'},\n    positionFlipOrder: {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'},\n    position: 'bottom',\n    margin: 8\n};\n\n/**\n * Repositions an element once using the provided options and elements.\n * @param reference Reference element\n * @param popper Popper element\n * @param opt Optional, additional options\n */\nexport const reposition = (\n    reference: HTMLElement,\n    popper: HTMLElement,\n    opt?: Partial<NanoPopOptions>\n): PositionMatch | null => {\n    const {\n        container,\n        margin,\n        position,\n        variantFlipOrder,\n        positionFlipOrder\n    } = {\n        container: document.documentElement.getBoundingClientRect(),\n        ...defaults,\n        ...opt\n    };\n\n    /**\n     * Reset position to resolve viewport\n     * See https://developer.mozilla.org/en-US/docs/Web/CSS/position#fixed\n     */\n    const {left: originalLeft, top: originalTop} = popper.style;\n    popper.style.left = '0';\n    popper.style.top = '0';\n\n    const refBox = reference.getBoundingClientRect();\n    const popBox = popper.getBoundingClientRect();\n\n    /**\n     * Holds coordinates of top, left, bottom and right alignment\n     */\n    const positionStore: AvailablePositions = {\n        t: refBox.top - popBox.height - margin,\n        b: refBox.bottom + margin,\n        r: refBox.right + margin,\n        l: refBox.left - popBox.width - margin\n    };\n\n    /**\n     * Holds corresponding variants (start, middle, end).\n     * The values depend on horizontal / vertical orientation\n     */\n    const variantStore: AvailableVariants = {\n        vs: refBox.left,\n        vm: refBox.left + refBox.width / 2 + -popBox.width / 2,\n        ve: refBox.left + refBox.width - popBox.width,\n        hs: refBox.top,\n        hm: refBox.bottom - refBox.height / 2 - popBox.height / 2,\n        he: refBox.bottom - popBox.height\n    };\n\n    // Extract position and variant\n    // Top-start -> top is \"position\" and \"start\" is the variant\n    const [posKey, varKey = 'middle'] = position.split('-');\n    const positions = positionFlipOrder[posKey as keyof PositionFlipOrder];\n    const variants = variantFlipOrder[varKey as keyof VariantFlipOrder];\n\n    // Try out all possible combinations, starting with the preferred one.\n    const {top, left, bottom, right} = container;\n\n    for (const p of positions) {\n        const vertical = (p === 't' || p === 'b');\n\n        // The position-value\n        const positionVal = positionStore[p as keyof AvailablePositions];\n\n        // Which property has to be changes.\n        const [positionKey, variantKey] = (vertical ? ['top', 'left'] : ['left', 'top']) as PositionPairs;\n\n        /**\n         * box refers to the size of the popper element. Depending on the orientation this is width or height.\n         * The limit is the corresponding, maximum value for this position.\n         */\n        const [positionSize, variantSize] = vertical ? [popBox.height, popBox.width] : [popBox.width, popBox.height];\n        const [positionMaximum, variantMaximum] = vertical ? [bottom, right] : [right, bottom];\n        const [positionMinimum, variantMinimum] = vertical ? [top, left] : [left, top];\n\n        // Skip pre-clipped values\n        if (positionVal < positionMinimum || (positionVal + positionSize) > positionMaximum) {\n            continue;\n        }\n\n        for (const v of variants) {\n\n            // The position-value, the related size value of the popper and the limit\n            const variantVal = variantStore[((vertical ? 'v' : 'h') + v) as keyof AvailableVariants];\n\n            if (variantVal < variantMinimum || (variantVal + variantSize) > variantMaximum) {\n                continue;\n            }\n\n            // Apply styles and normalize viewport\n            popper.style[variantKey] = `${variantVal - popBox[variantKey]}px`;\n            popper.style[positionKey] = `${positionVal - popBox[positionKey]}px`;\n            return (p + v) as PositionMatch;\n        }\n    }\n\n    // Revert style values (won't work with styled-elements or similar systems)\n    // \"Fix\" for https://github.com/Simonwep/nanopop/issues/7\n    popper.style.left = originalLeft;\n    popper.style.top = originalTop;\n\n    return null;\n};\n\n/**\n * Creates a stateful popper.\n * You can either...\n * ... pass an options object: createPopper(<options>)\n * ... pass both the reference and popper: create(<ref>, <el>, <?options>)\n * ... pass nothing, in this case you'll have to set at least both a reference and a popper in update.\n *\n * @param reference | options Reference element or options\n * @param popper Popper element\n * @param options Optional additional options\n */\nexport const createPopper: NanoPopConstructor = (\n    reference?: HTMLElement | Partial<NanoPopOptions>,\n    popper?: HTMLElement,\n    options?: Partial<NanoPopOptions>\n): NanoPop => {\n\n    // Resolve options\n    const baseOptions: Partial<NanoPopOptions> = typeof reference === 'object' && !(reference instanceof HTMLElement) ?\n        reference : {reference, popper, ...options};\n\n    return {\n\n        /**\n         * Repositions the current popper.\n         * @param options Optional options which get merged with the current ones.\n         */\n        update(options: Partial<NanoPopOptions> = baseOptions): PositionMatch | null {\n            const {reference, popper} = Object.assign(baseOptions, options);\n\n            if (!popper || !reference) {\n                throw new Error('Popper- or reference-element missing.');\n            }\n\n            return reposition(reference, popper, baseOptions);\n        }\n    };\n};\n", "import * as _ from './utils/utils';\nimport {parseToHSVA} from './utils/color';\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable from './libs/moveable';\nimport Selectable from './libs/selectable';\nimport buildPickr from './template';\nimport {createPopper} from 'nanopop';\n\nexport default class Pickr {\n\n    // Expose pickr utils\n    static utils = _;\n\n    // Assign version and export\n    static version = VERSION;\n\n    // Default strings\n    static I18N_DEFAULTS = {\n\n        // Strings visible in the UI\n        'ui:dialog': 'color picker dialog',\n        'btn:toggle': 'toggle color picker dialog',\n        'btn:swatch': 'color swatch',\n        'btn:last-color': 'use previous color',\n        'btn:save': 'Save',\n        'btn:cancel': 'Cancel',\n        'btn:clear': 'Clear',\n\n        // Strings used for aria-labels\n        'aria:btn:save': 'save and close',\n        'aria:btn:cancel': 'cancel and close',\n        'aria:btn:clear': 'clear and close',\n        'aria:input': 'color input field',\n        'aria:palette': 'color selection area',\n        'aria:hue': 'hue selection slider',\n        'aria:opacity': 'selection slider'\n    };\n\n    // Default options\n    static DEFAULT_OPTIONS = {\n        appClass: null,\n        theme: 'classic',\n        useAsButton: false,\n        padding: 8,\n        disabled: false,\n        comparison: true,\n        closeOnScroll: false,\n        outputPrecision: 0,\n        lockOpacity: false,\n        autoReposition: true,\n        container: 'body',\n\n        components: {\n            interaction: {}\n        },\n\n        i18n: {},\n        swatches: null,\n        inline: false,\n        sliders: null,\n\n        default: '#42445a',\n        defaultRepresentation: null,\n        position: 'bottom-middle',\n        adjustableNumbers: true,\n        showAlways: false,\n\n        closeWithKey: 'Escape'\n    };\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // If the current color value should be recalculated\n    _recalc = true;\n\n    // Positioning engine and DOM-Tree\n    _nanopop = null;\n    _root = null;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Animation frame used for setup.\n    // Will be cancelled in case of destruction.\n    _setupAnimationFrame = null;\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        init: [],\n        save: [],\n        hide: [],\n        show: [],\n        clear: [],\n        change: [],\n        changestop: [],\n        cancel: [],\n        swatchselect: []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({...Pickr.DEFAULT_OPTIONS}, opt);\n\n        const {swatches, components, theme, sliders, lockOpacity, padding} = opt;\n\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\n            opt.sliders = 'h';\n        }\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.opacity = (!lockOpacity && opacity);\n        components.palette = palette || preview || opacity || hue;\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        const {button, app} = this._root;\n        this._nanopop = createPopper(button, app, {\n            margin: padding\n        });\n\n        // Initialize accessibility\n        button.setAttribute('role', 'button');\n        button.setAttribute('aria-label', this._t('btn:toggle'));\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const that = this;\n        this._setupAnimationFrame = requestAnimationFrame((function cb() {\n\n            // TODO: Performance issue due to high call-rate?\n            if (!app.offsetWidth) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Create instance via method\n    static create = options => new Pickr(options);\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const {options} = this;\n\n        // Resolve elements\n        for (const type of ['el', 'container']) {\n            options[type] = _.resolveElement(options[type]);\n        }\n\n        // Create element and append it to body to\n        // Prevent initialization errors\n        this._root = buildPickr(this);\n\n        // Check if a custom button is used\n        if (options.useAsButton) {\n            this._root.button = options.el; // Replace button with customized button\n        }\n\n        options.container.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        opt.container.removeChild(root.root);\n\n        if (opt.inline) {\n            const parent = opt.el.parentElement;\n\n            if (opt.el.nextSibling) {\n                parent.insertBefore(root.app, opt.el.nextSibling);\n            } else {\n                parent.appendChild(root.app);\n            }\n        } else {\n            opt.container.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        } else if (opt.inline) {\n            opt.el.remove();\n        }\n\n        // Check if it should be immediatly disabled\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const cs = this.options.components;\n        const sliders = (inst.options.sliders || 'v').repeat(2);\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\n\n        // Re-assign if null\n        const getColor = () =>\n            this._color || (this._color = this._lastColor.clone());\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onstop: () => inst._emit('changestop', 'slider', inst),\n                onchange(x, y) {\n                    if (!cs.palette) {\n                        return;\n                    }\n\n                    const color = getColor();\n                    const {_root, options} = inst;\n                    const {lastColor, currentColor} = _root.preview;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n\n                        // Calculate saturation based on the position\n                        color.s = x * 100;\n\n                        // Calculate the value\n                        color.v = 100 - y * 100;\n\n                        // Prevent falling under zero\n                        color.v < 0 ? color.v = 0 : 0;\n                        inst._updateOutput('slider');\n                    }\n\n                    // Set picker and gradient color\n                    const cssRGBaString = color.toRGBA().toString(0);\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${color.a}), transparent),\n                        linear-gradient(to left, hsla(${color.h}, 100%, 50%, ${color.a}), rgba(255, 255, 255, ${color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.setProperty('--pcr-color', cssRGBaString);\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    } else if (!options.useAsButton && !inst._lastColor) {\n\n                        // Apply color to both the last and current color since the current state is cleared\n                        lastColor.style.setProperty('--pcr-color', cssRGBaString);\n                    }\n\n                    // Check if there's a swatch which color matches the current one\n                    const hexa = color.toHEXA().toString();\n                    for (const {el, color} of inst._swatchColors) {\n                        el.classList[hexa === color.toHEXA().toString() ? 'add' : 'remove']('pcr-active');\n                    }\n\n                    // Change current color\n                    currentColor.style.setProperty('--pcr-color', cssRGBaString);\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh === 'v' ? 'h' : 'v',\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onstop: () => inst._emit('changestop', 'slider', inst),\n                onchange(v) {\n                    if (!cs.hue || !cs.palette) {\n                        return;\n                    }\n\n                    const color = getColor();\n\n                    // Calculate hue\n                    if (inst._recalc) {\n                        color.h = v * 360;\n                    }\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so === 'v' ? 'h' : 'v',\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onstop: () => inst._emit('changestop', 'slider', inst),\n                onchange(v) {\n                    if (!cs.opacity || !cs.palette) {\n                        return;\n                    }\n\n                    const color = getColor();\n\n                    // Calculate opacity\n                    if (inst._recalc) {\n                        color.a = Math.round(v * 1e2) / 100;\n                    }\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${color.a})`;\n                    components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._recalc && inst._updateOutput('swatch');\n                }\n            })\n        };\n\n        this._components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on([\n                _root.interaction.cancel,\n                _root.preview.lastColor\n            ], 'click', () => {\n                this.setHSVA(...(this._lastColor || this._color).toHSVA(), true);\n                this._emit('cancel');\n            }),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // User input\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color, 'input', this);\n                    this._emit('changestop', 'input', this);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['focus', 'blur'], e => {\n                this._recalc = e.type === 'blur';\n                this._recalc && this._updateOutput(null);\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true, {passive: true})\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                }\n\n                return o;\n            });\n        }\n\n        if (options.autoReposition && !options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n\n                        if (options.closeOnScroll) {\n                            that.hide();\n                        }\n\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            const success = this._nanopop.update({\n                container: document.body.getBoundingClientRect(),\n                position: options.position\n            });\n\n            if (!success) {\n                const el = this._root.app;\n                const eb = el.getBoundingClientRect();\n                el.style.top = `${(window.innerHeight - eb.height) / 2}px`;\n                el.style.left = `${(window.innerWidth - eb.width) / 2}px`;\n            }\n        }\n    }\n\n    _updateOutput(eventSource) {\n        const {_root, _color, options} = this;\n\n        // Check if component is present\n        if (_root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\n                _color[method]().toString(options.outputPrecision) : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive && this._recalc) {\n            this._emit('change', _color, eventSource, this);\n        }\n    }\n\n    _clearColor(silent = false) {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.setProperty('--pcr-color', 'rgba(0, 0, 0, 0.15)');\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        this._lastColor = null;\n        if (!this._initializingActive && !silent) {\n\n            // Fire listener\n            this._emit('save', null);\n            this._emit('clear');\n        }\n    }\n\n    _parseLocalColor(str) {\n        const {values, type, a} = parseToHSVA(str);\n        const {lockOpacity} = this.options;\n        const alphaMakesAChange = a !== undefined && a !== 1;\n\n        // If no opacity is applied, add undefined at the very end which gets\n        // Set to 1 in setHSVA\n        if (values && values.length === 3) {\n            values[3] = undefined;\n        }\n\n        return {\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\n            type\n        };\n    }\n\n    _t(key) {\n        return this.options.i18n[key] || Pickr.I18N_DEFAULTS[key];\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n        this._eventListener[event].push(cb);\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = (this._eventListener[event] || []);\n        const index = callBacks.indexOf(cb);\n\n        if (~index) {\n            callBacks.splice(index, 1);\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = this._parseLocalColor(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const color = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const el = _.createElementFromString(\n                `<button type=\"button\" style=\"--pcr-color: ${color.toRGBA().toString(0)}\" aria-label=\"${this._t('btn:swatch')}\"/>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(el);\n            _swatchColors.push({el, color});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(el, 'click', () => {\n                    this.setHSVA(...color.toHSVA(), true);\n                    this._emit('swatchselect', color);\n                    this._emit('change', color, 'swatch', this);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n        const swatchColor = this._swatchColors[index];\n\n        // Check swatch data\n        if (swatchColor) {\n            const {el} = swatchColor;\n\n            // Remove HTML child and swatch data\n            this._root.swatches.removeChild(el);\n            this._swatchColors.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString(0);\n        preview.lastColor.style.setProperty('--pcr-color', cssRGBaString);\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.setProperty('--pcr-color', cssRGBaString);\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n\n        return this;\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n\n        // Cancel setup-frame if set\n        cancelAnimationFrame(this._setupAnimationFrame);\n\n        // Unbind events\n        this._eventBindings.forEach(args => _.off(...args));\n\n        // Destroy sub-components\n        Object.keys(this._components)\n            .forEach(key => this._components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n        const {root, app} = this._root;\n\n        // Remove element\n        if (root.parentElement) {\n            root.parentElement.removeChild(root);\n        }\n\n        // Remove .pcr-app\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        Object.keys(this)\n            .forEach(key => this[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n        if (this.isOpen()) {\n            this._root.app.classList.remove('visible');\n            this._emit('hide');\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n        if (!this.options.disabled && !this.isOpen()) {\n            this._root.app.classList.add('visible');\n            this._rePositioningPicker();\n            this._emit('show', this._color);\n            return this;\n        }\n\n        return false;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this._components;\n        hue.update((h / 360));\n        opacity.update(a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        // Update output if recalculation is enabled\n        if (recalc) {\n            this._updateOutput();\n        }\n\n        // Restore old state\n        this._recalc = recalc;\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor(silent);\n            return true;\n        }\n\n        const {values, type} = this._parseLocalColor(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            // Update color (fires 'save' event if silent is 'false')\n            if (!this.setHSVA(...values, silent)) {\n                return false;\n            }\n\n            // Update representation (fires 'change' event)\n            return this.setColorRepresentation(utype);\n        }\n\n        return false;\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * Returns the currently selected color.\n     * @returns {{a, toHSVA, toHEXA, s, v, h, clone, toCMYK, toHSLA, toRGBA}}\n     */\n    getSelectedColor() {\n        return this._lastColor;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "self", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "eventListener", "method", "elements", "events", "fn", "options", "HTMLCollection", "NodeList", "Array", "from", "isArray", "el", "ev", "capture", "slice", "arguments", "on", "bind", "off", "createElementFromString", "html", "div", "document", "createElement", "innerHTML", "trim", "firstElementChild", "createFromTemplate", "str", "removeAttribute", "name", "getAttribute", "resolve", "element", "base", "con", "subtree", "child", "children", "arr", "sub", "push", "keys", "length", "eventPath", "evt", "path", "composedPath", "target", "parentElement", "window", "resolveElement", "val", "Element", "split", "reduce", "pv", "cv", "ci", "a", "querySelector", "shadowRoot", "adjustableInputNumbers", "mapper", "v", "handleScroll", "e", "inc", "Number", "shiftKey", "ctrlKey", "deltaY", "index", "selectionStart", "replace", "i", "focus", "setSelectionRange", "preventDefault", "dispatchEvent", "Event", "passive", "min", "max", "floor", "round", "Math", "hsvToRgb", "h", "s", "f", "p", "q", "t", "mod", "hsvToHsl", "l", "rgbToHsv", "r", "g", "b", "minVal", "maxVal", "delta", "dr", "dg", "db", "cmykToHsv", "c", "m", "y", "k", "hslToHsv", "ns", "isNaN", "hexToHsv", "hex", "match", "map", "parseInt", "parseToHSVA", "toLowerCase", "ctx", "getContext", "fillStyle", "regex", "cmyk", "rgba", "hsla", "hsva", "hexa", "numarize", "array", "test", "undefined", "invalid", "type", "exec", "alphaValid", "values", "join", "raw", "substring", "HSVaColor", "original", "next", "precision", "toFixed", "that", "toHSVA", "toString", "toHSLA", "toRGBA", "toCMYK", "rgb", "toHEXA", "padStart", "alpha", "toUpperCase", "clone", "clamp", "Moveable", "opt", "assign", "lock", "onchange", "onstop", "_keyboard", "activeElement", "wrapper", "up", "right", "down", "left", "xm", "ym", "update", "cache", "x", "startsWith", "_tapstart", "_", "_tapstop", "_tapmove", "cancelable", "getBoundingClientRect", "touch", "touches", "clientX", "clientY", "width", "top", "height", "style", "offsetWidth", "offsetHeight", "cx", "cy", "trigger", "destroy", "Selectable", "className", "onTap", "forEach", "classList", "stopPropagation", "defaults", "variantFlipOrder", "start", "middle", "end", "positionFlipOrder", "bottom", "position", "margin", "reposition", "reference", "popper", "container", "documentElement", "originalLeft", "originalTop", "refBox", "popBox", "positionStore", "variantStore", "vs", "vm", "ve", "hs", "hm", "he", "posKey", "varKey", "positions", "variants", "vertical", "positionVal", "positionKey", "variantKey", "positionSize", "variantSize", "positionMaximum", "variantMaximum", "positionMinimum", "variantMinimum", "variantVal", "Pickr", "constructor", "init", "save", "hide", "show", "clear", "change", "changestop", "cancel", "swatchselect", "this", "DEFAULT_OPTIONS", "swatches", "components", "theme", "sliders", "lockOpacity", "padding", "includes", "interaction", "preview", "opacity", "hue", "palette", "_preBuild", "_buildComponents", "_bindEvents", "_finalBuild", "color", "addSwatch", "button", "app", "_root", "_nanopop", "baseOptions", "HTMLElement", "[object Object]", "Error", "setAttribute", "_t", "_setupAnimationFrame", "requestAnimationFrame", "cb", "setColor", "default", "_rePositioningPicker", "defaultRepresentation", "_representation", "setColorRepresentation", "showAlways", "_initializingActive", "_emit", "instance", "useAsButton", "inline", "appClass", "hidden", "input", "int", "find", "add", "contains", "appendChild", "removeChild", "parent", "nextSibling", "insertBefore", "remove", "parentNode", "replaceChild", "disabled", "disable", "comparison", "transition", "lastColor", "inst", "cs", "repeat", "so", "sh", "getColor", "_color", "_lastColor", "picker", "currentColor", "_recalc", "_updateOutput", "cssRGBaString", "background", "setProperty", "_swatchColors", "slider", "backgroundColor", "selectable", "_components", "eventBindings", "_clearColor", "setHSVA", "applyColor", "result", "stopImmediatePropagation", "ck", "closeWithKey", "isOpen", "code", "some", "adjustableNumbers", "ranges", "step", "range", "getColorRepresentation", "nv", "toPrecision", "autoReposition", "timeout", "closeOnScroll", "setTimeout", "rs", "clearTimeout", "_eventBindings", "body", "eb", "innerHeight", "innerWidth", "eventSource", "outputPrecision", "silent", "_parseLocalColor", "alphaMakesAChange", "i18n", "I18N_DEFAULTS", "event", "args", "_eventListener", "callBacks", "indexOf", "splice", "removeSwatch", "swatchColor", "cancelAnimationFrame", "destroyAndRemove", "recalc", "string", "utype", "click", "getSelectedColor", "getRoot", "enable", "VERSION"]
}
