{
  "version": 3,
  "sources": ["../../gridjs/node_modules/preact/dist/preact.module.js", "../../gridjs/src/util/id.ts", "../../gridjs/src/base.ts", "../../gridjs/src/i18n/en_US.ts", "../../gridjs/src/i18n/language.ts", "../../gridjs/src/view/base.tsx", "../../gridjs/src/util/getConfig.ts", "../../gridjs/src/view/htmlElement.tsx", "../../gridjs/src/util/html.ts", "../../gridjs/src/cell.ts", "../../gridjs/src/pipeline/processor.ts", "../../gridjs/src/row.ts", "../../gridjs/src/tabular.ts", "../../gridjs/src/util/array.ts", "../../gridjs/src/util/eventEmitter.ts", "../../gridjs/src/pipeline/filter/globalSearch.ts", "../../gridjs/src/operator/search.ts", "../../gridjs/src/util/className.ts", "../../gridjs/src/view/base/store.ts", "../../gridjs/src/plugin.ts", "../../gridjs/src/view/plugin/search/store.ts", "../../gridjs/src/view/base/actions.ts", "../../gridjs/src/view/plugin/search/actions.ts", "../../gridjs/src/pipeline/filter/serverGlobalSearch.ts", "../../gridjs/src/util/log.ts", "../../gridjs/src/view/plugin/search/search.tsx", "../../gridjs/src/util/debounce.ts", "../../gridjs/src/pipeline/limit/pagination.ts", "../../gridjs/src/pipeline/limit/serverPagination.ts", "../../gridjs/src/view/plugin/pagination.tsx", "../../gridjs/src/util/width.ts", "../../gridjs/src/view/table/shadow.tsx", "../../gridjs/src/util/string.ts", "../../gridjs/src/header.ts", "../../gridjs/src/util/dispatcher.ts", "../../gridjs/src/storage/storage.ts", "../../gridjs/src/storage/memory.ts", "../../gridjs/src/storage/server.ts", "../../gridjs/src/storage/storageUtils.ts", "../../gridjs/src/pipeline/pipeline.ts", "../../gridjs/src/types.ts", "../../gridjs/src/pipeline/extractor/storage.ts", "../../gridjs/src/pipeline/transformer/arrayToTabular.ts", "../../gridjs/src/pipeline/initiator/server.ts", "../../gridjs/src/pipeline/transformer/storageResponseToArray.ts", "../../gridjs/src/pipeline/pipelineUtils.ts", "../../gridjs/src/config.ts", "../../gridjs/node_modules/preact/hooks/dist/hooks.module.js", "../../gridjs/src/view/table/td.tsx", "../../gridjs/src/view/table/tr.tsx", "../../gridjs/src/view/table/messageRow.tsx", "../../gridjs/src/view/table/tbody.tsx", "../../gridjs/src/pipeline/sort/native.ts", "../../gridjs/src/view/plugin/sort/store.ts", "../../gridjs/src/view/plugin/sort/actions.ts", "../../gridjs/src/pipeline/sort/server.ts", "../../gridjs/src/view/plugin/sort/sort.tsx", "../../gridjs/src/view/plugin/resize/resize.tsx", "../../gridjs/src/util/throttle.ts", "../../gridjs/src/view/table/th.tsx", "../../gridjs/src/view/table/thead.tsx", "../../gridjs/src/util/table.ts", "../../gridjs/src/view/table/table.tsx", "../../gridjs/src/view/headerContainer.tsx", "../../gridjs/src/view/footerContainer.tsx", "../../gridjs/src/view/container.tsx", "../../gridjs/src/grid.ts"],
  "sourcesContent": ["var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&(\"function\"==typeof u.type&&null!=x[h].__e&&x[h].__e==u.__d&&(u.__d=_(i,h+1)),N(x[h],x[h]));if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof H){if(g=u.props,m=(a=H.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in H&&H.prototype.render?u.__c=h=new H(g,x):(u.__c=h=new d(g,x),h.constructor=H,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=H.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,H.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==H.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==H.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,A=l.__r,C=0,\"prototype\"in H&&H.prototype.render)h.state=h.__s,h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context);else do{h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++C<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),$=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray($)?$:[$],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{P as render,S as hydrate,h as createElement,h,p as Fragment,y as createRef,i as isValidElement,d as Component,q as cloneElement,B as createContext,x as toChildArray,l as options};\n//# sourceMappingURL=preact.module.js.map\n", "export type ID = string;\n\nexport function generateUUID(): ID {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n", "import { generateUUID, ID } from './util/id';\n\nclass Base {\n  private readonly _id: ID;\n\n  constructor(id?: ID) {\n    this._id = id || generateUUID();\n  }\n\n  get id(): ID {\n    return this._id;\n  }\n}\n\nexport default Base;\n", "export default {\n  search: {\n    placeholder: 'Type a keyword...',\n  },\n  sort: {\n    sortAsc: 'Sort column ascending',\n    sortDesc: 'Sort column descending',\n  },\n  pagination: {\n    previous: 'Previous',\n    next: 'Next',\n    navigate: (page, pages) => `Page ${page} of ${pages}`,\n    page: (page) => `Page ${page}`,\n    showing: 'Showing',\n    of: 'of',\n    to: 'to',\n    results: 'results',\n  },\n  loading: 'Loading...',\n  noRecordsFound: 'No matching records found',\n  error: 'An error happened while fetching the data',\n};\n", "import enUS from './en_US';\ntype MessageFormat = (...args) => string;\ntype Message = string | MessageFormat;\nexport type Language = { [key: string]: Message | Language };\n\nexport class Translator {\n  private readonly _language: Language;\n  private readonly _defaultLanguage: Language;\n\n  constructor(language?: Language) {\n    this._language = language;\n    this._defaultLanguage = enUS;\n  }\n\n  /**\n   * Tries to split the message with \".\" and find\n   * the key in the given language\n   *\n   * @param message\n   * @param lang\n   */\n  getString(message: string, lang: Language): MessageFormat {\n    if (!lang || !message) return null;\n\n    const splitted = message.split('.');\n    const key = splitted[0];\n\n    if (lang[key]) {\n      const val = lang[key];\n\n      if (typeof val === 'string') {\n        return (): string => val;\n      } else if (typeof val === 'function') {\n        return val;\n      } else {\n        return this.getString(splitted.slice(1).join('.'), val);\n      }\n    }\n\n    return null;\n  }\n\n  translate(message: string, ...args): string {\n    const translated = this.getString(message, this._language);\n    let messageFormat;\n\n    if (translated) {\n      messageFormat = translated;\n    } else {\n      messageFormat = this.getString(message, this._defaultLanguage);\n    }\n\n    if (messageFormat) {\n      return messageFormat(...args);\n    }\n\n    return message;\n  }\n}\n\nexport function useTranslator(translator: Translator) {\n  return function (message: string, ...args): string {\n    return translator.translate(message, ...args);\n  };\n}\n", "import { Component } from 'preact';\nimport { Config } from '../config';\nimport getConfig from '../util/getConfig';\nimport { useTranslator } from '../i18n/language';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface BaseProps {}\n\nexport abstract class BaseComponent<\n  P extends BaseProps = unknown,\n  S = unknown,\n> extends Component<P, S> {\n  protected config: Config;\n  protected _: (message: string, ...args) => string;\n\n  constructor(props: P, context: any) {\n    super(props, context);\n    this.config = getConfig(context);\n\n    if (this.config) {\n      this._ = useTranslator(this.config.translator);\n    }\n  }\n}\n\nexport interface BaseComponent<P> {\n  new (props: P, context?: any): Component<P>;\n}\n", "import { Context } from 'preact';\nimport { Config } from '../config';\n\n/**\n * This is a hack to get the current global config from Preact context.\n * My assumption is that we only need one global context which is the ConfigContext\n *\n * @param context\n */\nexport default function getConfig(context: {\n  [key: string]: Context<any>;\n}): Config {\n  if (!context) return null;\n\n  const keys = Object.keys(context);\n\n  if (keys.length) {\n    // TODO: can we use a better way to capture and return the Config context?\n    const ctx: any = context[keys[0]];\n    return ctx.props.value;\n  }\n\n  return null;\n}\n", "import { h } from 'preact';\n\nimport { BaseComponent, BaseProps } from './base';\n\nexport interface HTMLContentProps extends BaseProps {\n  content: string;\n  parentElement?: string;\n}\n\nexport class HTMLElement extends BaseComponent<HTMLContentProps> {\n  static defaultProps = {\n    parentElement: 'span',\n  };\n\n  render() {\n    return h(this.props.parentElement, {\n      dangerouslySetInnerHTML: { __html: this.props.content },\n    });\n  }\n}\n", "import { h, VNode } from 'preact';\nimport { HTMLElement } from '../view/htmlElement';\n\nexport function decode(content: string): string {\n  const value = new DOMParser().parseFromString(content, 'text/html');\n  return value.documentElement.textContent;\n}\n\nexport function html(content: string, parentElement?: string): VNode {\n  return h(HTMLElement, { content: content, parentElement: parentElement });\n}\n", "import Base from './base';\nimport { TCell } from './types';\nimport { html } from './util/html';\nimport { ComponentChild } from 'preact';\n\nclass Cell extends Base {\n  // because a Cell is a subset of TCell type\n  public data: number | string | boolean | ComponentChild;\n\n  constructor(data: TCell) {\n    super();\n\n    this.update(data);\n  }\n\n  private cast(data: TCell): number | string | boolean | ComponentChild {\n    if (data instanceof HTMLElement) {\n      return html(data.outerHTML);\n    }\n\n    return data;\n  }\n\n  /**\n   * Updates the Cell's data\n   *\n   * @param data\n   */\n  public update(data: TCell): Cell {\n    this.data = this.cast(data);\n    return this;\n  }\n}\n\nexport default Cell;\n", "// The order of enum items define the processing order of the processor type\n// e.g. Extractor = 0 will be processed before Transformer = 1\nimport { generateUUID, ID } from '../util/id';\nimport { EventEmitter } from '../util/eventEmitter';\n\nexport enum ProcessorType {\n  Initiator,\n  ServerFilter,\n  ServerSort,\n  ServerLimit,\n  Extractor,\n  Transformer,\n  Filter,\n  Sort,\n  Limit,\n}\n\ninterface PipelineProcessorEvents<T, P> {\n  propsUpdated: (processor: PipelineProcessor<T, P>) => void;\n  beforeProcess: (...args) => void;\n  afterProcess: (...args) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface PipelineProcessorProps {}\n\nexport abstract class PipelineProcessor<\n  T,\n  P extends Partial<PipelineProcessorProps>,\n> extends EventEmitter<PipelineProcessorEvents<T, P>> {\n  public readonly id: ID;\n  private readonly _props: P;\n\n  abstract get type(): ProcessorType;\n  protected abstract _process(...args): T | Promise<T>;\n  protected validateProps?(...args): void;\n\n  constructor(props?: Partial<P>) {\n    super();\n\n    this._props = {} as P;\n    this.id = generateUUID();\n\n    if (props) this.setProps(props);\n  }\n\n  /**\n   * process is used to call beforeProcess and afterProcess callbacks\n   * This function is just a wrapper that calls _process()\n   *\n   * @param args\n   */\n  process(...args): T | Promise<T> {\n    if (this.validateProps instanceof Function) {\n      this.validateProps(...args);\n    }\n\n    this.emit('beforeProcess', ...args);\n    const result = this._process(...args);\n    this.emit('afterProcess', ...args);\n    return result;\n  }\n\n  setProps(props: Partial<P>): this {\n    Object.assign(this._props, props);\n    this.emit('propsUpdated', this);\n    return this;\n  }\n\n  get props(): P {\n    return this._props;\n  }\n}\n", "import Cell from './cell';\nimport Base from './base';\nimport { TCell } from './types';\n\nclass Row extends Base {\n  private _cells: Cell[];\n\n  constructor(cells?: Cell[]) {\n    super();\n\n    this.cells = cells || [];\n  }\n\n  public cell(index: number): Cell {\n    return this._cells[index];\n  }\n\n  public get cells(): Cell[] {\n    return this._cells;\n  }\n\n  public set cells(cells: Cell[]) {\n    this._cells = cells;\n  }\n\n  public toArray(): TCell[] {\n    return this.cells.map((cell) => cell.data);\n  }\n\n  /**\n   * Creates a new Row from an array of Cell(s)\n   * This method generates a new ID for the Row and all nested elements\n   *\n   * @param cells\n   * @returns Row\n   */\n  static fromCells(cells: Cell[]): Row {\n    return new Row(cells.map((cell) => new Cell(cell.data)));\n  }\n\n  get length(): number {\n    return this.cells.length;\n  }\n}\n\nexport default Row;\n", "import Base from './base';\nimport Row from './row';\nimport Cell from './cell';\nimport { OneDArray, TCell, TwoDArray } from './types';\nimport { oneDtoTwoD } from './util/array';\n\nclass Tabular extends Base {\n  private _rows: Row[];\n  private _length: number;\n\n  constructor(rows?: Row[] | Row) {\n    super();\n\n    if (rows instanceof Array) {\n      this.rows = rows;\n    } else if (rows instanceof Row) {\n      this.rows = [rows];\n    } else {\n      this.rows = [];\n    }\n  }\n\n  get rows(): Row[] {\n    return this._rows;\n  }\n\n  set rows(rows: Row[]) {\n    this._rows = rows;\n  }\n\n  get length(): number {\n    return this._length || this.rows.length;\n  }\n\n  // we want to sent the length when storage is ServerStorage\n  set length(len: number) {\n    this._length = len;\n  }\n\n  public toArray(): TCell[][] {\n    return this.rows.map((row) => row.toArray());\n  }\n\n  /**\n   * Creates a new Tabular from an array of Row(s)\n   * This method generates a new ID for the Tabular and all nested elements\n   *\n   * @param rows\n   * @returns Tabular\n   */\n  static fromRows(rows: Row[]): Tabular {\n    return new Tabular(rows.map((row) => Row.fromCells(row.cells)));\n  }\n\n  /**\n   * Creates a new Tabular from a 2D array\n   * This method generates a new ID for the Tabular and all nested elements\n   *\n   * @param data\n   * @returns Tabular\n   */\n  static fromArray<T extends TCell>(\n    data: OneDArray<T> | TwoDArray<T>,\n  ): Tabular {\n    data = oneDtoTwoD(data);\n\n    return new Tabular(\n      data.map((row) => new Row(row.map((cell) => new Cell(cell)))),\n    );\n  }\n}\n\nexport default Tabular;\n", "import { OneDArray, TwoDArray } from '../types';\n\nexport function oneDtoTwoD<T>(data: OneDArray<T> | TwoDArray<T>): TwoDArray<T> {\n  if (data[0] && !(data[0] instanceof Array)) {\n    return [data] as TwoDArray<T>;\n  }\n\n  return data as TwoDArray<T>;\n}\n\nexport function flatten<T>(arrays: TwoDArray<T>): OneDArray<T> {\n  return arrays.reduce((prev, x) => prev.concat(x), []);\n}\n", "type EventArgs<T> = [T] extends [(...args: infer U) => any]\n  ? U\n  : [T] extends [void]\n  ? []\n  : [T];\n\n/**\n * Example:\n *\n * export interface BaseEvents<P, S> {\n *   SET_STATE: (component: BaseComponent<P, S>, state: S) => void;\n * }\n */\n\nexport interface EventEmitter<EventTypes> {\n  addListener<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes>;\n\n  on<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes>;\n\n  off<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes>;\n\n  emit<EventName extends keyof EventTypes>(\n    event: EventName,\n    ...args: EventArgs<EventTypes[EventName]>\n  ): boolean;\n}\n\nexport class EventEmitter<EventTypes> {\n  private callbacks: { [event: string]: ((...args) => void)[] };\n\n  // because we are using EventEmitter as a mixin and the\n  // constructor won't be called by the applyMixins function\n  // see src/base.ts and src/util/applyMixin.ts\n  private init(event?: string): void {\n    if (!this.callbacks) {\n      this.callbacks = {};\n    }\n\n    if (event && !this.callbacks[event]) {\n      this.callbacks[event] = [];\n    }\n  }\n\n  on<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes> {\n    this.init(event as string);\n    this.callbacks[event as string].push(listener);\n    return this;\n  }\n\n  off<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes> {\n    const eventName = event as string;\n\n    this.init();\n\n    if (!this.callbacks[eventName] || this.callbacks[eventName].length === 0) {\n      // there is no callbacks with this key\n      return this;\n    }\n\n    this.callbacks[eventName] = this.callbacks[eventName].filter(\n      (value) => value != listener,\n    );\n\n    return this;\n  }\n\n  emit<EventName extends keyof EventTypes>(\n    event: EventName,\n    ...args: EventArgs<EventTypes[EventName]>\n  ): boolean {\n    const eventName = event as string;\n\n    this.init(eventName);\n\n    if (this.callbacks[eventName].length > 0) {\n      this.callbacks[eventName].forEach((value) => value(...args));\n      return true;\n    }\n\n    return false;\n  }\n}\n", "import search from '../../operator/search';\nimport Tabular from '../../tabular';\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { OneDArray, TCell, TColumn } from '../../types';\n\ninterface GlobalSearchFilterProps extends PipelineProcessorProps {\n  keyword: string;\n  columns: OneDArray<TColumn>;\n  ignoreHiddenColumns: boolean;\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) => string;\n}\n\nclass GlobalSearchFilter extends PipelineProcessor<\n  Tabular,\n  GlobalSearchFilterProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Filter;\n  }\n\n  _process(data: Tabular): Tabular {\n    if (this.props.keyword) {\n      return search(\n        String(this.props.keyword).trim(),\n        this.props.columns,\n        this.props.ignoreHiddenColumns,\n        data,\n        this.props.selector,\n      );\n    }\n\n    return data;\n  }\n}\n\nexport default GlobalSearchFilter;\n", "import Tabular from '../tabular';\nimport { VNode } from 'preact';\nimport { HTMLContentProps } from '../view/htmlElement';\nimport { OneDArray, TCell, TColumn } from '../types';\n\nexport default function (\n  keyword: string,\n  columns: OneDArray<TColumn>,\n  ignoreHiddenColumns: boolean,\n  tabular: Tabular,\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) => string,\n): Tabular {\n  // escape special regex chars\n  keyword = keyword.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n  return new Tabular(\n    tabular.rows.filter((row, rowIndex) =>\n      row.cells.some((cell, cellIndex) => {\n        if (!cell) {\n          return false;\n        }\n\n        if (ignoreHiddenColumns) {\n          if (\n            columns &&\n            columns[cellIndex] &&\n            typeof columns[cellIndex] === 'object'\n          ) {\n            const typedColumn = columns[cellIndex] as TColumn;\n            if (typedColumn.hidden) {\n              return false;\n            }\n          }\n        }\n\n        let data = '';\n\n        if (typeof selector === 'function') {\n          data = selector(cell.data, rowIndex, cellIndex);\n        } else if (typeof cell.data === 'object') {\n          // HTMLContent element\n          const element = cell.data as VNode<HTMLContentProps>;\n          if (element && element.props && element.props.content) {\n            // TODO: we should only search in the content of the element. props.content is the entire HTML element\n            data = element.props.content;\n          }\n        } else {\n          // primitive types\n          data = String(cell.data);\n        }\n\n        return new RegExp(keyword, 'gi').test(data);\n      }),\n    ),\n  );\n}\n", "export function className(...args: string[]): string {\n  const prefix = 'gridjs';\n\n  return `${prefix}${args.reduce(\n    (prev: string, cur: string) => `${prev}-${cur}`,\n    '',\n  )}`;\n}\n\nexport function classJoin(...classNames: string[]): string {\n  return (\n    classNames\n      .filter((x) => x)\n      .reduce((className, prev) => `${className || ''} ${prev}`, '')\n      .trim() || null\n  );\n}\n", "import { EventEmitter } from '../../util/eventEmitter';\nimport Dispatcher from '../../util/dispatcher';\n\ninterface BaseStoreEvents<STATE> {\n  updated: (newState: STATE, prevState?: STATE) => void;\n}\n\nexport default abstract class BaseStore<STATE, ACTIONS> extends EventEmitter<\n  BaseStoreEvents<STATE>\n> {\n  private _state: STATE;\n  protected readonly dispatcher: Dispatcher<any>;\n\n  constructor(dispatcher: Dispatcher<any>) {\n    super();\n    this.dispatcher = dispatcher;\n    this._state = this.getInitialState();\n    dispatcher.register(this._handle.bind(this));\n  }\n\n  abstract handle<K extends keyof ACTIONS>(type: K, payload: ACTIONS[K]): void;\n  abstract getInitialState(): STATE;\n\n  private _handle(action): void {\n    this.handle(action.type, action.payload);\n  }\n\n  setState(newState: STATE): void {\n    const prevState = this._state;\n    this._state = newState;\n    this.emit('updated', newState, prevState);\n  }\n\n  get state(): STATE {\n    return this._state;\n  }\n}\n", "import { BaseComponent, BaseProps } from './view/base';\nimport { Component, ComponentProps, Fragment, h } from 'preact';\nimport log from './util/log';\n\n/**\n * BaseProps for all plugins\n */\nexport interface PluginBaseProps<T extends PluginBaseComponentCtor> {\n  plugin: Plugin<T>;\n}\n\n/**\n * BaseComponent for all plugins\n */\nexport abstract class PluginBaseComponent<\n  P extends PluginBaseProps<any> = any,\n  S = unknown,\n> extends BaseComponent<P, S> {}\n\nexport interface PluginBaseComponentCtor<\n  P extends PluginBaseProps<any> = any,\n  S = unknown,\n> {\n  new (props: P, context?: any): Component<P, S>;\n}\n\nexport enum PluginPosition {\n  Header,\n  Footer,\n  Cell,\n}\n\nexport interface Plugin<T extends PluginBaseComponentCtor> {\n  id: string;\n  position: PluginPosition;\n  component: T;\n  props?: Partial<ComponentProps<T>>;\n  order?: number;\n}\n\nexport class PluginManager {\n  private readonly plugins: Plugin<any>[];\n\n  constructor() {\n    this.plugins = [];\n  }\n\n  get<T extends PluginBaseComponentCtor>(id: string): Plugin<T> | null {\n    const plugins = this.plugins.filter((p) => p.id === id);\n\n    if (plugins.length > 0) {\n      return plugins[0];\n    }\n\n    return null;\n  }\n\n  add<T extends PluginBaseComponentCtor>(plugin: Plugin<T>): this {\n    if (!plugin.id) {\n      log.error('Plugin ID cannot be empty');\n      return this;\n    }\n\n    if (this.get(plugin.id) !== null) {\n      log.error(`Duplicate plugin ID: ${plugin.id}`);\n      return this;\n    }\n\n    this.plugins.push(plugin);\n    return this;\n  }\n\n  remove(id: string): this {\n    this.plugins.splice(this.plugins.indexOf(this.get(id)), 1);\n    return this;\n  }\n\n  list<T extends PluginBaseComponentCtor>(\n    position?: PluginPosition,\n  ): Plugin<T>[] {\n    let plugins: Plugin<T>[];\n\n    if (position != null || position != undefined) {\n      plugins = this.plugins.filter((p) => p.position === position);\n    } else {\n      plugins = this.plugins;\n    }\n\n    return plugins.sort((a, b) => a.order - b.order);\n  }\n}\n\nexport interface PluginRendererProps extends BaseProps {\n  props?: any;\n  // to render a single plugin\n  pluginId?: string;\n  // to render all plugins in this PluginPosition\n  position?: PluginPosition;\n}\n\nexport class PluginRenderer extends BaseComponent<PluginRendererProps> {\n  render() {\n    if (this.props.pluginId) {\n      // render a single plugin\n      const plugin = this.config.plugin.get(this.props.pluginId);\n\n      if (!plugin) return null;\n\n      return h(\n        Fragment,\n        {},\n        h(plugin.component, {\n          plugin: plugin,\n          ...plugin.props,\n          ...this.props.props,\n        }),\n      );\n    } else if (this.props.position !== undefined) {\n      // render using a specific plugin position\n      return h(\n        Fragment,\n        {},\n        this.config.plugin\n          .list(this.props.position)\n          .map((p) =>\n            h(p.component, { plugin: p, ...p.props, ...this.props.props }),\n          ),\n      );\n    }\n\n    return null;\n  }\n}\n", "import BaseStore from '../../base/store';\nimport { SearchActionsType } from './actions';\n\nexport type SearchStoreState = { keyword: string | null };\n\nexport class SearchStore extends BaseStore<\n  SearchStoreState,\n  SearchActionsType\n> {\n  getInitialState(): SearchStoreState {\n    return { keyword: null };\n  }\n\n  handle(type, payload): void {\n    if (type === 'SEARCH_KEYWORD') {\n      const { keyword } = payload;\n      this.search(keyword);\n    }\n  }\n\n  private search(keyword: string): void {\n    this.setState({ keyword: keyword });\n  }\n}\n", "import Dispatcher from '../../util/dispatcher';\n\nexport abstract class BaseActions<ACTIONS> {\n  private readonly dispatcher: Dispatcher<any>;\n\n  constructor(dispatcher: Dispatcher<any>) {\n    this.dispatcher = dispatcher;\n  }\n\n  protected dispatch<K extends keyof ACTIONS>(\n    type: K,\n    payload: ACTIONS[K],\n  ): void {\n    this.dispatcher.dispatch({\n      type: type,\n      payload: payload,\n    });\n  }\n}\n", "import { BaseActions } from '../../base/actions';\n\nexport interface SearchActionsType {\n  SEARCH_KEYWORD: {\n    keyword: string;\n  };\n}\n\nexport class SearchActions extends BaseActions<SearchActionsType> {\n  search(keyword: string): void {\n    this.dispatch('SEARCH_KEYWORD', {\n      keyword: keyword,\n    });\n  }\n}\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { ServerStorageOptions } from '../../storage/server';\n\ninterface ServerGlobalSearchFilterProps extends PipelineProcessorProps {\n  keyword?: string;\n  url?: (prevUrl: string, keyword: string) => string;\n  body?: (prevBody: BodyInit, keyword: string) => BodyInit;\n}\n\nclass ServerGlobalSearchFilter extends PipelineProcessor<\n  ServerStorageOptions,\n  ServerGlobalSearchFilterProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.ServerFilter;\n  }\n\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\n    if (!this.props.keyword) return options;\n\n    const updates = {};\n\n    if (this.props.url) {\n      updates['url'] = this.props.url(options.url, this.props.keyword);\n    }\n\n    if (this.props.body) {\n      updates['body'] = this.props.body(options.body, this.props.keyword);\n    }\n\n    return {\n      ...options,\n      ...updates,\n    };\n  }\n}\n\nexport default ServerGlobalSearchFilter;\n", "/**\n * Centralized logging lib\n *\n * This class needs some improvements but so far it has been used to have a coherent way to log\n */\nclass Logger {\n  private format(message: string, type: string): string {\n    return `[Grid.js] [${type.toUpperCase()}]: ${message}`;\n  }\n\n  error(message: string, throwException = false): void {\n    const msg = this.format(message, 'error');\n\n    if (throwException) {\n      throw Error(msg);\n    } else {\n      console.error(msg);\n    }\n  }\n\n  warn(message: string): void {\n    console.warn(this.format(message, 'warn'));\n  }\n\n  info(message: string): void {\n    console.info(this.format(message, 'info'));\n  }\n}\n\nexport default new Logger();\n", "import { h } from 'preact';\nimport GlobalSearchFilter from '../../../pipeline/filter/globalSearch';\nimport { classJoin, className } from '../../../util/className';\nimport { SearchStore, SearchStoreState } from './store';\nimport { SearchActions } from './actions';\nimport ServerGlobalSearchFilter from '../../../pipeline/filter/serverGlobalSearch';\nimport { debounce } from '../../../util/debounce';\nimport { TCell } from '../../../types';\nimport { PluginBaseComponent, PluginBaseProps } from '../../../plugin';\n\nexport interface SearchConfig {\n  keyword?: string;\n  enabled?: boolean;\n  ignoreHiddenColumns?: boolean;\n  debounceTimeout?: number;\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) => string;\n  server?: {\n    url?: (prevUrl: string, keyword: string) => string;\n    body?: (prevBody: BodyInit, keyword: string) => BodyInit;\n  };\n}\n\nexport class Search extends PluginBaseComponent<\n  SearchConfig & PluginBaseProps<Search>\n> {\n  private readonly searchProcessor:\n    | GlobalSearchFilter\n    | ServerGlobalSearchFilter;\n  private readonly actions: SearchActions;\n  private readonly store: SearchStore;\n  private readonly storeUpdatedFn: (...args) => void;\n\n  static defaultProps = {\n    debounceTimeout: 250,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.actions = new SearchActions(this.config.dispatcher);\n    this.store = new SearchStore(this.config.dispatcher);\n    const { enabled, keyword } = props;\n\n    if (enabled) {\n      // initial search\n      if (keyword) this.actions.search(keyword);\n\n      this.storeUpdatedFn = this.storeUpdated.bind(this);\n      this.store.on('updated', this.storeUpdatedFn);\n\n      let searchProcessor;\n      if (props.server) {\n        searchProcessor = new ServerGlobalSearchFilter({\n          keyword: props.keyword,\n          url: props.server.url,\n          body: props.server.body,\n        });\n      } else {\n        searchProcessor = new GlobalSearchFilter({\n          keyword: props.keyword,\n          columns: this.config.header && this.config.header.columns,\n          ignoreHiddenColumns:\n            props.ignoreHiddenColumns ||\n            props.ignoreHiddenColumns === undefined,\n          selector: props.selector,\n        });\n      }\n\n      this.searchProcessor = searchProcessor;\n\n      // adds a new processor to the pipeline\n      this.config.pipeline.register(searchProcessor);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.config.pipeline.unregister(this.searchProcessor);\n    this.store.off('updated', this.storeUpdatedFn);\n  }\n\n  private storeUpdated(state: SearchStoreState): void {\n    // updates the processor state\n    this.searchProcessor.setProps({\n      keyword: state.keyword,\n    });\n  }\n\n  private onChange(event): void {\n    const keyword = event.target.value;\n    this.actions.search(keyword);\n  }\n\n  render() {\n    if (!this.props.enabled) return null;\n\n    let onInput = this.onChange.bind(this);\n\n    // add debounce to input only if it's a server-side search\n    if (this.searchProcessor instanceof ServerGlobalSearchFilter) {\n      onInput = debounce(onInput, this.props.debounceTimeout);\n    }\n\n    return (\n      <div\n        className={className(classJoin('search', this.config.className.search))}\n      >\n        <input\n          type=\"search\"\n          placeholder={this._('search.placeholder')}\n          aria-label={this._('search.placeholder')}\n          onInput={onInput}\n          className={classJoin(\n            className('input'),\n            className('search', 'input'),\n          )}\n          value={this.store.state.keyword}\n        />\n      </div>\n    );\n  }\n}\n", "export const debounce = <F extends (...args: any[]) => any>(\n  func: F,\n  waitFor: number,\n) => {\n  let timeout;\n\n  return (...args: Parameters<F>): Promise<ReturnType<F>> =>\n    new Promise((resolve) => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      timeout = setTimeout(() => resolve(func(...args)), waitFor);\n    });\n};\n", "import Tabular from '../../tabular';\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\n\ninterface PaginationLimitProps extends PipelineProcessorProps {\n  page: number;\n  limit: number;\n}\n\nclass PaginationLimit extends PipelineProcessor<Tabular, PaginationLimitProps> {\n  protected validateProps(): void {\n    if (isNaN(Number(this.props.limit)) || isNaN(Number(this.props.page))) {\n      throw Error('Invalid parameters passed');\n    }\n  }\n\n  get type(): ProcessorType {\n    return ProcessorType.Limit;\n  }\n\n  protected _process(data: Tabular): Tabular {\n    const page = this.props.page;\n    const start = page * this.props.limit;\n    const end = (page + 1) * this.props.limit;\n\n    return new Tabular(data.rows.slice(start, end));\n  }\n}\n\nexport default PaginationLimit;\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { ServerStorageOptions } from '../../storage/server';\n\ninterface ServerPaginationLimitProps extends PipelineProcessorProps {\n  page: number;\n  limit: number;\n  url?: (prevUrl: string, page: number, limit: number) => string;\n  body?: (prevBody: BodyInit, page: number, limit: number) => BodyInit;\n}\n\nclass ServerPaginationLimit extends PipelineProcessor<\n  ServerStorageOptions,\n  ServerPaginationLimitProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.ServerLimit;\n  }\n\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\n    const updates = {};\n\n    if (this.props.url) {\n      updates['url'] = this.props.url(\n        options.url,\n        this.props.page,\n        this.props.limit,\n      );\n    }\n\n    if (this.props.body) {\n      updates['body'] = this.props.body(\n        options.body,\n        this.props.page,\n        this.props.limit,\n      );\n    }\n\n    return {\n      ...options,\n      ...updates,\n    };\n  }\n}\n\nexport default ServerPaginationLimit;\n", "import { h, Fragment } from 'preact';\nimport PaginationLimit from '../../pipeline/limit/pagination';\nimport { classJoin, className } from '../../util/className';\nimport ServerPaginationLimit from '../../pipeline/limit/serverPagination';\nimport Tabular from '../../tabular';\nimport { PipelineProcessor } from '../../pipeline/processor';\nimport { PluginBaseComponent, PluginBaseProps } from '../../plugin';\n\ninterface PaginationState {\n  page: number;\n  limit?: number;\n  total: number;\n}\n\nexport interface PaginationConfig {\n  enabled: boolean;\n  limit?: number;\n  page?: number;\n  summary?: boolean;\n  nextButton?: boolean;\n  prevButton?: boolean;\n  buttonsCount?: number;\n  resetPageOnUpdate?: boolean;\n  server?: {\n    url?: (prevUrl: string, page: number, limit: number) => string;\n    body?: (prevBody: BodyInit, page: number, limit: number) => BodyInit;\n  };\n}\n\nexport class Pagination extends PluginBaseComponent<\n  PluginBaseProps<Pagination> & PaginationConfig,\n  PaginationState\n> {\n  private processor: PaginationLimit | ServerPaginationLimit;\n  private onUpdateFn: (processor: PipelineProcessor<any, any>) => void;\n  private setTotalFromTabularFn: (tabular: Tabular) => void;\n\n  static defaultProps = {\n    summary: true,\n    nextButton: true,\n    prevButton: true,\n    buttonsCount: 3,\n    limit: 10,\n    resetPageOnUpdate: true,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      limit: props.limit,\n      page: props.page || 0,\n      total: 0,\n    };\n  }\n\n  componentWillMount(): void {\n    if (this.props.enabled) {\n      let processor;\n\n      this.setTotalFromTabularFn = this.setTotalFromTabular.bind(this);\n\n      if (this.props.server) {\n        processor = new ServerPaginationLimit({\n          limit: this.state.limit,\n          page: this.state.page,\n          url: this.props.server.url,\n          body: this.props.server.body,\n        });\n\n        this.config.pipeline.on('afterProcess', this.setTotalFromTabularFn);\n      } else {\n        processor = new PaginationLimit({\n          limit: this.state.limit,\n          page: this.state.page,\n        });\n\n        // Pagination (all Limit processors) is the last step in the pipeline\n        // and we assume that at this stage, we have the rows that we care about.\n        // Let's grab the rows before processing Pagination and set total number of rows\n        processor.on('beforeProcess', this.setTotalFromTabularFn);\n      }\n\n      this.processor = processor;\n      this.config.pipeline.register(processor);\n\n      // we need to make sure that the state is set\n      // to the default props when an error happens\n      this.config.pipeline.on('error', () => {\n        this.setState({\n          total: 0,\n          page: 0,\n        });\n      });\n    }\n  }\n\n  private setTotalFromTabular(tabular: Tabular): void {\n    this.setTotal(tabular.length);\n  }\n\n  private onUpdate(processor): void {\n    // this is to ensure that the current page is set to 0\n    // when a processor is updated for some reason\n    if (this.props.resetPageOnUpdate && processor !== this.processor) {\n      this.setPage(0);\n    }\n  }\n\n  componentDidMount(): void {\n    this.onUpdateFn = this.onUpdate.bind(this);\n    this.config.pipeline.on('updated', this.onUpdateFn);\n  }\n\n  componentWillUnmount() {\n    this.config.pipeline.unregister(this.processor);\n    this.config.pipeline.off('updated', this.onUpdateFn);\n  }\n\n  private get pages(): number {\n    return Math.ceil(this.state.total / this.state.limit);\n  }\n\n  private setPage(page: number): void {\n    if (page >= this.pages || page < 0 || page === this.state.page) {\n      return null;\n    }\n\n    this.setState({\n      page: page,\n    });\n\n    this.processor.setProps({\n      page: page,\n    });\n  }\n\n  private setTotal(totalRows: number): void {\n    // to set the correct total number of rows\n    // when running in-memory operations\n    this.setState({\n      total: totalRows,\n    });\n  }\n\n  renderPages() {\n    if (this.props.buttonsCount <= 0) {\n      return null;\n    }\n\n    // how many pagination buttons to render?\n    const maxCount: number = Math.min(this.pages, this.props.buttonsCount);\n\n    let pagePivot = Math.min(this.state.page, Math.floor(maxCount / 2));\n    if (this.state.page + Math.floor(maxCount / 2) >= this.pages) {\n      pagePivot = maxCount - (this.pages - this.state.page);\n    }\n\n    return (\n      <Fragment>\n        {this.pages > maxCount && this.state.page - pagePivot > 0 && (\n          <Fragment>\n            <button\n              tabIndex={0}\n              role=\"button\"\n              onClick={this.setPage.bind(this, 0)}\n              title={this._('pagination.firstPage')}\n              aria-label={this._('pagination.firstPage')}\n              className={this.config.className.paginationButton}\n            >\n              {this._('1')}\n            </button>\n            <button\n              tabIndex={-1}\n              className={classJoin(\n                className('spread'),\n                this.config.className.paginationButton,\n              )}\n            >\n              ...\n            </button>\n          </Fragment>\n        )}\n\n        {Array.from(Array(maxCount).keys())\n          .map((i) => this.state.page + (i - pagePivot))\n          .map((i) => (\n            <button\n              tabIndex={0}\n              role=\"button\"\n              onClick={this.setPage.bind(this, i)}\n              className={classJoin(\n                this.state.page === i\n                  ? classJoin(\n                      className('currentPage'),\n                      this.config.className.paginationButtonCurrent,\n                    )\n                  : null,\n                this.config.className.paginationButton,\n              )}\n              title={this._('pagination.page', i + 1)}\n              aria-label={this._('pagination.page', i + 1)}\n            >\n              {this._(`${i + 1}`)}\n            </button>\n          ))}\n\n        {this.pages > maxCount && this.pages > this.state.page + pagePivot + 1 && (\n          <Fragment>\n            <button\n              tabIndex={-1}\n              className={classJoin(\n                className('spread'),\n                this.config.className.paginationButton,\n              )}\n            >\n              ...\n            </button>\n            <button\n              tabIndex={0}\n              role=\"button\"\n              onClick={this.setPage.bind(this, this.pages - 1)}\n              title={this._('pagination.page', this.pages)}\n              aria-label={this._('pagination.page', this.pages)}\n              className={this.config.className.paginationButton}\n            >\n              {this._(`${this.pages}`)}\n            </button>\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n\n  renderSummary() {\n    return (\n      <Fragment>\n        {this.props.summary && this.state.total > 0 && (\n          <div\n            role=\"status\"\n            aria-live=\"polite\"\n            className={classJoin(\n              className('summary'),\n              this.config.className.paginationSummary,\n            )}\n            title={this._(\n              'pagination.navigate',\n              this.state.page + 1,\n              this.pages,\n            )}\n          >\n            {this._('pagination.showing')}{' '}\n            <b>{this._(`${this.state.page * this.state.limit + 1}`)}</b>{' '}\n            {this._('pagination.to')}{' '}\n            <b>\n              {this._(\n                `${Math.min(\n                  (this.state.page + 1) * this.state.limit,\n                  this.state.total,\n                )}`,\n              )}\n            </b>{' '}\n            {this._('pagination.of')} <b>{this._(`${this.state.total}`)}</b>{' '}\n            {this._('pagination.results')}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n\n  render() {\n    if (!this.props.enabled) return null;\n\n    return (\n      <div\n        className={classJoin(\n          className('pagination'),\n          this.config.className.pagination,\n        )}\n      >\n        {this.renderSummary()}\n\n        <div className={className('pages')}>\n          {this.props.prevButton && (\n            <button\n              tabIndex={0}\n              role=\"button\"\n              disabled={this.state.page === 0}\n              onClick={this.setPage.bind(this, this.state.page - 1)}\n              title={this._('pagination.previous')}\n              aria-label={this._('pagination.previous')}\n              className={classJoin(\n                this.config.className.paginationButton,\n                this.config.className.paginationButtonPrev,\n              )}\n            >\n              {this._('pagination.previous')}\n            </button>\n          )}\n\n          {this.renderPages()}\n\n          {this.props.nextButton && (\n            <button\n              tabIndex={0}\n              role=\"button\"\n              disabled={this.pages === this.state.page + 1 || this.pages === 0}\n              onClick={this.setPage.bind(this, this.state.page + 1)}\n              title={this._('pagination.next')}\n              aria-label={this._('pagination.next')}\n              className={classJoin(\n                this.config.className.paginationButton,\n                this.config.className.paginationButtonNext,\n              )}\n            >\n              {this._('pagination.next')}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n", "export function width(width: string | number, containerWidth?: number): number {\n  if (typeof width == 'string') {\n    if (width.indexOf('%') > -1) {\n      return (containerWidth / 100) * parseInt(width, 10);\n    } else {\n      return parseInt(width, 10);\n    }\n  }\n\n  return width;\n}\n\nexport function px(width: number): string {\n  if (!width) return '';\n  return `${Math.floor(width)}px`;\n}\n", "import { Component, h, RefObject } from 'preact';\nimport { BaseComponent, BaseProps } from '../base';\nimport { className } from '../../util/className';\n\ninterface ShadowTableProps extends BaseProps {\n  tableRef?: RefObject<Component>;\n}\n\n/**\n * ShadowTable renders a hidden table and is used to calculate the column's width\n * when autoWidth option is enabled\n */\nexport class ShadowTable extends BaseComponent<ShadowTableProps> {\n  private tableElement: HTMLTableElement;\n  private tableClassName: string;\n  private tableStyle: string;\n\n  constructor(props, context) {\n    super(props, context);\n\n    const tableRef = this.props.tableRef;\n    this.tableElement = tableRef.current.base.cloneNode(\n      true,\n    ) as HTMLTableElement;\n\n    this.tableElement.style.position = 'absolute';\n    this.tableElement.style.width = '100%';\n    this.tableElement.style.zIndex = '-2147483640';\n    this.tableElement.style.visibility = 'hidden';\n\n    this.tableClassName = this.tableElement.className;\n    this.tableStyle = this.tableElement.style.cssText;\n  }\n\n  public widths(): { [columnId: string]: { minWidth: number; width: number } } {\n    this.tableElement.className = `${this.tableClassName} ${className(\n      'shadowTable',\n    )}`;\n\n    this.tableElement.style.tableLayout = 'auto';\n    this.tableElement.style.width = 'auto';\n    this.tableElement.style.padding = '0';\n    this.tableElement.style.margin = '0';\n    this.tableElement.style.border = 'none';\n    this.tableElement.style.outline = 'none';\n\n    let obj = Array.from(\n      this.base.parentNode.querySelectorAll<HTMLElement>('thead th'),\n    ).reduce((prev, current) => {\n      current.style.width = `${current.clientWidth}px`;\n\n      return {\n        [current.getAttribute('data-column-id')]: {\n          minWidth: current.clientWidth,\n        },\n        ...prev,\n      };\n    }, {});\n\n    this.tableElement.className = this.tableClassName;\n    this.tableElement.style.cssText = this.tableStyle;\n    this.tableElement.style.tableLayout = 'auto';\n\n    obj = Array.from(\n      this.base.parentNode.querySelectorAll<HTMLElement>('thead th'),\n    ).reduce((prev, current) => {\n      prev[current.getAttribute('data-column-id')]['width'] =\n        current.clientWidth;\n\n      return prev;\n    }, obj);\n\n    return obj;\n  }\n\n  render() {\n    if (this.props.tableRef.current) {\n      return (\n        <div\n          ref={(nodeElement) => {\n            nodeElement && nodeElement.appendChild(this.tableElement);\n          }}\n        />\n      );\n    }\n\n    return null;\n  }\n}\n", "export function camelCase(str: string): string {\n  if (!str) return '';\n\n  const words = str.split(' ');\n\n  // do not convert strings that are already in camelCase format\n  if (words.length === 1 && /([a-z][A-Z])+/g.test(str)) {\n    return str;\n  }\n\n  return words\n    .map(function (word, index) {\n      // if it is the first word, lowercase all the chars\n      if (index == 0) {\n        return word.toLowerCase();\n      }\n\n      // if it is not the first word only upper case the first char and lowercase the rest\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    })\n    .join('');\n}\n", "import { OneDArray, TColumn, TwoDArray } from './types';\nimport Base from './base';\nimport { Config, UserConfig } from './config';\nimport { px, width } from './util/width';\nimport { ShadowTable } from './view/table/shadow';\nimport {\n  Component,\n  ComponentChild,\n  createRef,\n  h,\n  isValidElement,\n  RefObject,\n  render,\n} from 'preact';\nimport { camelCase } from './util/string';\nimport { flatten } from './util/array';\nimport logger from './util/log';\nimport { PluginPosition } from './plugin';\n\nclass Header extends Base {\n  private _columns: OneDArray<TColumn>;\n\n  constructor() {\n    super();\n\n    this._columns = [];\n  }\n\n  get columns(): OneDArray<TColumn> {\n    return this._columns;\n  }\n\n  set columns(columns) {\n    this._columns = columns;\n  }\n\n  get visibleColumns(): OneDArray<TColumn> {\n    return this._columns.filter((c) => !c.hidden);\n  }\n\n  /**\n   * Tries to automatically adjust the width of columns based on:\n   *    - Header cell content\n   *    - Cell content of the first row\n   *    - Cell content of the last row\n   *\n   * @param config\n   */\n  adjustWidth(config: Config): this {\n    const container: Element = config.container;\n    const tableRef: RefObject<Component> = config.tableRef;\n    const tempRef: RefObject<HTMLDivElement> = config.tempRef;\n    const autoWidth = config.tempRef || true;\n\n    if (!container) {\n      // we can't calculate the width because the container\n      // is unknown at this stage\n      return this;\n    }\n\n    // pixels\n    const containerWidth = container.clientWidth;\n\n    // let's create a shadow table with the first 10 rows of the data\n    // and let the browser to render the table with table-layout: auto\n    // no padding, margin or border to get the minimum space required\n    // to render columns. One the table is rendered and widths are known,\n    // we unmount the shadow table from the DOM and set the correct width\n    const shadowTable = createRef();\n    let widths = {};\n\n    if (tableRef.current && autoWidth) {\n      // render a ShadowTable with the first 10 rows\n      const el = h(ShadowTable, {\n        tableRef: tableRef,\n      });\n      el.ref = shadowTable;\n\n      render(el, tempRef.current);\n\n      widths = shadowTable.current.widths();\n    }\n\n    for (const column of flatten(Header.tabularFormat(this.columns))) {\n      // because we don't want to set the width of parent THs\n      if (column.columns && column.columns.length > 0) {\n        continue;\n      }\n\n      if (!column.width && autoWidth) {\n        // tries to find the corresponding cell\n        // from the ShadowTable and set the correct width\n\n        if (column.id in widths) {\n          // because a column can be hidden, too\n          column.width = px(widths[column.id]['width']);\n          column.minWidth = px(widths[column.id]['minWidth']);\n        }\n      } else {\n        // column width is already defined\n        // sets the column with based on the width of its container\n        column.width = px(width(column.width, containerWidth));\n      }\n    }\n\n    if (tableRef.current && autoWidth) {\n      // unmount the shadow table from temp\n      render(null, tempRef.current);\n    }\n\n    return this;\n  }\n\n  private setSort(userConfig: UserConfig, columns?: OneDArray<TColumn>): void {\n    const cols = columns || this.columns || [];\n\n    for (const column of cols) {\n      // sorting can only be enabled for columns without any children\n      if (column.columns && column.columns.length > 0) {\n        column.sort = {\n          enabled: false,\n        };\n      }\n\n      // implicit userConfig.sort flag\n      if (column.sort === undefined && userConfig.sort) {\n        column.sort = {\n          enabled: true,\n        };\n      }\n\n      // false, null, etc.\n      if (!column.sort) {\n        column.sort = {\n          enabled: false,\n        };\n      } else if (typeof column.sort === 'object') {\n        column.sort = {\n          enabled: true,\n          ...column.sort,\n        };\n      }\n\n      if (column.columns) {\n        this.setSort(userConfig, column.columns);\n      }\n    }\n  }\n\n  private setFixedHeader(\n    userConfig: UserConfig,\n    columns?: OneDArray<TColumn>,\n  ): void {\n    const cols = columns || this.columns || [];\n\n    for (const column of cols) {\n      if (column.fixedHeader === undefined) {\n        column.fixedHeader = userConfig.fixedHeader;\n      }\n\n      if (column.columns) {\n        this.setFixedHeader(userConfig, column.columns);\n      }\n    }\n  }\n\n  private setResizable(\n    userConfig: UserConfig,\n    columns?: OneDArray<TColumn>,\n  ): void {\n    const cols = columns || this.columns || [];\n\n    for (const column of cols) {\n      if (column.resizable === undefined) {\n        column.resizable = userConfig.resizable;\n      }\n\n      if (column.columns) {\n        this.setResizable(userConfig, column.columns);\n      }\n    }\n  }\n\n  private setID(columns?: OneDArray<TColumn>): void {\n    const cols = columns || this.columns || [];\n\n    for (const column of cols) {\n      if (!column.id && typeof column.name === 'string') {\n        // let's guess the column ID if it's undefined\n        column.id = camelCase(column.name);\n      }\n\n      if (!column.id) {\n        logger.error(\n          `Could not find a valid ID for one of the columns. Make sure a valid \"id\" is set for all columns.`,\n        );\n      }\n\n      // nested columns\n      if (column.columns) {\n        this.setID(column.columns);\n      }\n    }\n  }\n\n  private populatePlugins(\n    userConfig: UserConfig,\n    columns: OneDArray<TColumn>,\n  ): void {\n    // populate the cell columns\n    for (const column of columns) {\n      if (column.plugin !== undefined) {\n        userConfig.plugin.add({\n          id: column.id,\n          props: {},\n          ...column.plugin,\n          position: PluginPosition.Cell,\n        });\n      }\n    }\n  }\n\n  static fromColumns(\n    columns: OneDArray<TColumn | string | ComponentChild>,\n  ): Header {\n    const header = new Header();\n\n    for (const column of columns) {\n      if (typeof column === 'string' || isValidElement(column)) {\n        header.columns.push({\n          name: column,\n        });\n      } else if (typeof column === 'object') {\n        const typedColumn = column as TColumn;\n\n        if (typedColumn.columns) {\n          typedColumn.columns = Header.fromColumns(typedColumn.columns).columns;\n        }\n\n        // because the data for that cell is null\n        // if we are trying to render a plugin\n        if (typeof typedColumn.plugin === 'object') {\n          if (typedColumn.data === undefined) {\n            typedColumn.data = null;\n          }\n        }\n\n        // TColumn type\n        header.columns.push(column as TColumn);\n      }\n    }\n\n    return header;\n  }\n\n  static fromUserConfig(userConfig: UserConfig): Header | null {\n    const header = new Header();\n\n    // TODO: this part needs some refactoring\n    if (userConfig.from) {\n      header.columns = Header.fromHTMLTable(userConfig.from).columns;\n    } else if (userConfig.columns) {\n      header.columns = Header.fromColumns(userConfig.columns).columns;\n    } else if (\n      userConfig.data &&\n      typeof userConfig.data[0] === 'object' &&\n      !(userConfig.data[0] instanceof Array)\n    ) {\n      // if data[0] is an object but not an Array\n      // used for when a JSON payload is provided\n      header.columns = Object.keys(userConfig.data[0]).map((name) => {\n        return { name: name };\n      });\n    }\n\n    if (header.columns.length) {\n      header.setID();\n      header.setSort(userConfig);\n      header.setFixedHeader(userConfig);\n      header.setResizable(userConfig);\n      header.populatePlugins(userConfig, header.columns);\n      return header;\n    }\n\n    return null;\n  }\n\n  static fromHTMLTable(element: HTMLElement): Header {\n    const header = new Header();\n    const thead = element.querySelector('thead');\n    const ths = thead.querySelectorAll('th');\n\n    for (const th of ths as any) {\n      header.columns.push({\n        name: th.innerHTML,\n        width: th.width,\n      });\n    }\n\n    return header;\n  }\n\n  /**\n   * Converts the tree-like format of Header to a tabular format\n   *\n   * Example:\n   *\n   *    H1\n   *      H1-H1\n   *      H1-H2\n   *    H2\n   *      H2-H1\n   *\n   *    becomes:\n   *      [\n   *        [H1, H2],\n   *        [H1-H1, H1-H2, H2-H1]\n   *      ]\n   *\n   * @param columns\n   */\n  static tabularFormat(columns: OneDArray<TColumn>): TwoDArray<TColumn> {\n    let result: TwoDArray<TColumn> = [];\n    const cols = columns || [];\n    let nextRow = [];\n\n    if (cols && cols.length) {\n      result.push(cols);\n\n      for (const col of cols) {\n        if (col.columns && col.columns.length) {\n          nextRow = nextRow.concat(col.columns);\n        }\n      }\n\n      if (nextRow.length) {\n        result = result.concat(this.tabularFormat(nextRow));\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns an array of leaf columns (last columns in the tree)\n   *\n   * @param columns\n   */\n  static leafColumns(columns: OneDArray<TColumn>): OneDArray<TColumn> {\n    let result: OneDArray<TColumn> = [];\n    const cols = columns || [];\n\n    if (cols && cols.length) {\n      for (const col of cols) {\n        if (!col.columns || col.columns.length === 0) {\n          result.push(col);\n        }\n\n        if (col.columns) {\n          result = result.concat(this.leafColumns(col.columns));\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns the maximum depth of a column tree\n   * @param column\n   */\n  static maximumDepth(column: TColumn): number {\n    return this.tabularFormat([column]).length - 1;\n  }\n}\n\nexport default Header;\n", "const _prefix = 'ID_';\n\n/**\n * This class is mostly based on Flux's Dispatcher by Facebook\n * https://github.com/facebook/flux/blob/master/src/Dispatcher.js\n */\nexport default class Dispatcher<TPayload> {\n  _callbacks: { [key: string]: (payload: TPayload) => void };\n  _isDispatching: boolean;\n  _isHandled: { [key: string]: boolean };\n  _isPending: { [key: string]: boolean };\n  _lastID: number;\n  _pendingPayload: TPayload;\n\n  constructor() {\n    this._callbacks = {};\n    this._isDispatching = false;\n    this._isHandled = {};\n    this._isPending = {};\n    this._lastID = 1;\n  }\n  /**\n   * Registers a callback to be invoked with every dispatched payload. Returns\n   * a token that can be used with `waitFor()`.\n   */\n  register(callback: (payload: TPayload) => void): string {\n    const id = _prefix + this._lastID++;\n    this._callbacks[id] = callback;\n    return id;\n  }\n  /**\n   * Removes a callback based on its token.\n   */\n  unregister(id: string): void {\n    if (!this._callbacks[id]) {\n      throw Error(\n        `Dispatcher.unregister(...): ${id} does not map to a registered callback.`,\n      );\n    }\n\n    delete this._callbacks[id];\n  }\n  /**\n   * Waits for the callbacks specified to be invoked before continuing execution\n   * of the current callback. This method should only be used by a callback in\n   * response to a dispatched payload.\n   */\n  waitFor(ids: Array<string>): void {\n    if (!this._isDispatching) {\n      throw Error(\n        'Dispatcher.waitFor(...): Must be invoked while dispatching.',\n      );\n    }\n\n    for (let ii = 0; ii < ids.length; ii++) {\n      const id = ids[ii];\n      if (this._isPending[id]) {\n        if (!this._isHandled[id]) {\n          throw Error(`Dispatcher.waitFor(...): Circular dependency detected while ' +\n            'waiting for ${id}.`);\n        }\n        continue;\n      }\n      if (!this._callbacks[id]) {\n        throw Error(\n          `Dispatcher.waitFor(...): ${id} does not map to a registered callback.`,\n        );\n      }\n\n      this._invokeCallback(id);\n    }\n  }\n  /**\n   * Dispatches a payload to all registered callbacks.\n   */\n  dispatch(payload: TPayload): void {\n    if (this._isDispatching) {\n      throw Error(\n        'Dispatch.dispatch(...): Cannot dispatch in the middle of a dispatch.',\n      );\n    }\n\n    this._startDispatching(payload);\n    try {\n      for (const id in this._callbacks) {\n        if (this._isPending[id]) {\n          continue;\n        }\n        this._invokeCallback(id);\n      }\n    } finally {\n      this._stopDispatching();\n    }\n  }\n  /**\n   * Is this Dispatcher currently dispatching.\n   */\n  isDispatching(): boolean {\n    return this._isDispatching;\n  }\n  /**\n   * Call the callback stored with the given id. Also do some internal\n   * bookkeeping.\n   *\n   * @internal\n   */\n  private _invokeCallback(id: string): void {\n    this._isPending[id] = true;\n    this._callbacks[id](this._pendingPayload);\n    this._isHandled[id] = true;\n  }\n  /**\n   * Set up bookkeeping needed when dispatching.\n   *\n   * @internal\n   */\n  private _startDispatching(payload: TPayload): void {\n    for (const id in this._callbacks) {\n      this._isPending[id] = false;\n      this._isHandled[id] = false;\n    }\n    this._pendingPayload = payload;\n    this._isDispatching = true;\n  }\n  /**\n   * Clear bookkeeping used for dispatching.\n   *\n   * @internal\n   */\n  private _stopDispatching(): void {\n    delete this._pendingPayload;\n    this._isDispatching = false;\n  }\n}\n", "/**\n * Base Storage class. All storage implementation must inherit this class\n */\nimport { TData } from '../types';\n\nabstract class Storage<I> {\n  /**\n   * Returns all rows based on ...args\n   * @param args\n   */\n  abstract get(...args): Promise<StorageResponse>;\n\n  /**\n   * To set all rows\n   *\n   * @param data\n   */\n  set?(data: I | ((...args) => void)): this;\n}\n\nexport interface StorageResponse {\n  data: TData;\n  total: number;\n}\n\nexport default Storage;\n", "import Storage, { StorageResponse } from './storage';\nimport { TData } from '../types';\n\nclass MemoryStorage extends Storage<TData> {\n  private data: (() => TData) | (() => Promise<TData>);\n\n  constructor(data: TData | (() => TData) | (() => Promise<TData>)) {\n    super();\n    this.set(data);\n  }\n\n  public async get(): Promise<StorageResponse> {\n    const data = await this.data();\n\n    return {\n      data: data,\n      total: data.length,\n    };\n  }\n\n  public set(data: TData | (() => TData) | (() => Promise<TData>)): this {\n    if (data instanceof Array) {\n      this.data = (): TData => data;\n    } else if (data instanceof Function) {\n      this.data = data;\n    }\n\n    return this;\n  }\n}\n\nexport default MemoryStorage;\n", "import Storage, { StorageResponse } from './storage';\nimport log from '../util/log';\n\nexport interface ServerStorageOptions extends RequestInit {\n  url: string;\n  // to format the data and columns\n  then?: (data: any) => any[][];\n  // to handle the response from the server. `handle` will\n  // be called first and then `then` callback will be invoked\n  // The purpose of this function is to handle the behaviour\n  // of server and either reject and resolve the initial response\n  // before calling the `then` function\n  handle?: (response: Response) => Promise<any>;\n  total?: (data: any) => number;\n  // to bypass the current implementation of ServerStorage and process the\n  // request manually (e.g. when user wants to connect their own SDK/HTTP Client)\n  data?: (opts: ServerStorageOptions) => Promise<StorageResponse>;\n}\n\nclass ServerStorage extends Storage<ServerStorageOptions> {\n  private readonly options: ServerStorageOptions;\n\n  constructor(options: ServerStorageOptions) {\n    super();\n    this.options = options;\n  }\n\n  private handler(response: Response): Promise<any> {\n    if (typeof this.options.handle === 'function') {\n      return this.options.handle(response);\n    }\n\n    if (response.ok) {\n      return response.json();\n    } else {\n      log.error(\n        `Could not fetch data: ${response.status} - ${response.statusText}`,\n        true,\n      );\n      return null;\n    }\n  }\n\n  public get(options?: ServerStorageOptions): Promise<StorageResponse> {\n    // this.options is the initial config object\n    // options is the runtime config passed by the pipeline (e.g. search component)\n    const opts = {\n      ...this.options,\n      ...options,\n    };\n\n    // if `options.data` is provided, the current ServerStorage\n    // implementation will be ignored and we let options.data to\n    // handle the request. Useful when HTTP client needs to be\n    // replaced with something else\n    if (typeof opts.data === 'function') {\n      return opts.data(opts);\n    }\n\n    return fetch(opts.url, opts)\n      .then(this.handler.bind(this))\n      .then((res) => {\n        return {\n          data: opts.then(res),\n          total: typeof opts.total === 'function' ? opts.total(res) : undefined,\n        };\n      });\n  }\n}\n\nexport default ServerStorage;\n", "import { UserConfig } from '../config';\nimport MemoryStorage from './memory';\nimport Storage from './storage';\nimport ServerStorage from './server';\nimport log from '../util/log';\nimport { decode, html } from '../util/html';\n\nclass StorageUtils {\n  /**\n   * Accepts the userConfig dict and tries to guess and return a Storage type\n   *\n   * @param userConfig\n   */\n  public static createFromUserConfig(userConfig: UserConfig): Storage<any> {\n    let storage = null;\n    // `data` array is provided\n    if (userConfig.data) {\n      storage = new MemoryStorage(userConfig.data);\n    }\n\n    if (userConfig.from) {\n      storage = new MemoryStorage(this.tableElementToArray(userConfig.from));\n      // remove the source table element from the DOM\n      userConfig.from.style.display = 'none';\n    }\n\n    if (userConfig.server) {\n      storage = new ServerStorage(userConfig.server);\n    }\n\n    if (!storage) {\n      log.error('Could not determine the storage type', true);\n    }\n\n    return storage;\n  }\n\n  /**\n   * Accepts a HTML table element and converts it into a 2D array of data\n   *\n   * TODO: This function can be a step in the pipeline: Convert Table -> Load into a memory storage -> ...\n   *\n   * @param element\n   */\n  static tableElementToArray(element: HTMLElement): any[][] {\n    const arr = [];\n    const tbody = element.querySelector('tbody');\n    const rows = tbody.querySelectorAll('tr');\n\n    for (const row of rows as any) {\n      const cells: HTMLElement[] = row.querySelectorAll('td');\n      const parsedRow = [];\n\n      for (const cell of cells) {\n        // try to capture a TD with single text element first\n        if (\n          cell.childNodes.length === 1 &&\n          cell.childNodes[0].nodeType === Node.TEXT_NODE\n        ) {\n          parsedRow.push(decode(cell.innerHTML));\n        } else {\n          parsedRow.push(html(cell.innerHTML));\n        }\n      }\n\n      arr.push(parsedRow);\n    }\n\n    return arr;\n  }\n}\n\nexport default StorageUtils;\n", "import { PipelineProcessor, ProcessorType } from './processor';\nimport { ID } from '../util/id';\nimport log from '../util/log';\nimport { EventEmitter } from '../util/eventEmitter';\n\ninterface PipelineEvents<T> {\n  /**\n   * Generic updated event. Triggers the callback function when the pipeline\n   * is updated, including when a new processor is registered, a processor's props\n   * get updated, etc.\n   */\n  updated: (processor: PipelineProcessor<any, any>) => void;\n  /**\n   * Triggers the callback function when a new\n   * processor is registered successfully\n   */\n  afterRegister: () => void;\n  /**\n   * Triggers the callback when a registered\n   * processor's property is updated\n   */\n  propsUpdated: () => void;\n  /**\n   * Triggers the callback function when the pipeline\n   * is fully processed, before returning the results\n   *\n   * afterProcess will not be called if there is an\n   * error in the pipeline (i.e a step throw an Error)\n   */\n  afterProcess: (prev: T) => void;\n  /**\n   * Triggers the callback function when the pipeline\n   * fails to process all steps or at least one step\n   * throws an Error\n   */\n  error: (prev: T) => void;\n}\n\nclass Pipeline<T, P = unknown> extends EventEmitter<PipelineEvents<T>> {\n  // available steps for this pipeline\n  private readonly _steps: Map<ProcessorType, PipelineProcessor<T, P>[]> =\n    new Map<ProcessorType, PipelineProcessor<T, P>[]>();\n  // used to cache the results of processors using their id field\n  private cache: Map<string, any> = new Map<string, any>();\n  // keeps the index of the last updated processor in the registered\n  // processors list and will be used to invalidate the cache\n  // -1 means all new processors should be processed\n  private lastProcessorIndexUpdated = -1;\n\n  constructor(steps?: PipelineProcessor<any, any>[]) {\n    super();\n\n    if (steps) {\n      steps.forEach((step) => this.register(step));\n    }\n  }\n\n  /**\n   * Clears the `cache` array\n   */\n  clearCache(): void {\n    this.cache = new Map<string, any>();\n    this.lastProcessorIndexUpdated = -1;\n  }\n\n  /**\n   * Registers a new processor\n   *\n   * @param processor\n   * @param priority\n   */\n  register(\n    processor: PipelineProcessor<any, any>,\n    priority: number = null,\n  ): void {\n    if (processor.type === null) {\n      throw Error('Processor type is not defined');\n    }\n\n    // binding the propsUpdated callback to the Pipeline\n    processor.on('propsUpdated', this.processorPropsUpdated.bind(this));\n\n    this.addProcessorByPriority(processor, priority);\n    this.afterRegistered(processor);\n  }\n\n  /**\n   * Removes a processor from the list\n   *\n   * @param processor\n   */\n  unregister(processor: PipelineProcessor<any, any>): void {\n    if (!processor) return;\n\n    const subSteps = this._steps.get(processor.type);\n\n    if (subSteps && subSteps.length) {\n      this._steps.set(\n        processor.type,\n        subSteps.filter((proc) => proc != processor),\n      );\n      this.emit('updated', processor);\n    }\n  }\n\n  /**\n   * Registers a new processor\n   *\n   * @param processor\n   * @param priority\n   */\n  private addProcessorByPriority(\n    processor: PipelineProcessor<T, P>,\n    priority: number,\n  ): void {\n    let subSteps = this._steps.get(processor.type);\n\n    if (!subSteps) {\n      const newSubStep = [];\n      this._steps.set(processor.type, newSubStep);\n      subSteps = newSubStep;\n    }\n\n    if (priority === null || priority < 0) {\n      subSteps.push(processor);\n    } else {\n      if (!subSteps[priority]) {\n        // slot is empty\n        subSteps[priority] = processor;\n      } else {\n        // slot is NOT empty\n        const first = subSteps.slice(0, priority - 1);\n        const second = subSteps.slice(priority + 1);\n\n        this._steps.set(processor.type, first.concat(processor).concat(second));\n      }\n    }\n  }\n\n  /**\n   * Flattens the _steps Map and returns a list of steps with their correct priorities\n   */\n  get steps(): PipelineProcessor<T, P>[] {\n    let steps: PipelineProcessor<T, P>[] = [];\n\n    for (const type of this.getSortedProcessorTypes()) {\n      const subSteps = this._steps.get(type);\n\n      if (subSteps && subSteps.length) {\n        steps = steps.concat(subSteps);\n      }\n    }\n\n    // to remove any undefined elements\n    return steps.filter((s) => s);\n  }\n\n  /**\n   * Accepts ProcessType and returns an array of the registered processes\n   * with the give type\n   *\n   * @param type\n   */\n  getStepsByType(type: ProcessorType): PipelineProcessor<T, P>[] {\n    return this.steps.filter((process) => process.type === type);\n  }\n\n  /**\n   * Returns a list of ProcessorType according to their priority\n   */\n  private getSortedProcessorTypes(): ProcessorType[] {\n    return Object.keys(ProcessorType)\n      .filter((key) => !isNaN(Number(key)))\n      .map((key) => Number(key));\n  }\n\n  /**\n   * Runs all registered processors based on their correct priority\n   * and returns the final output after running all steps\n   *\n   * @param data\n   */\n  async process(data?: T): Promise<T> {\n    const lastProcessorIndexUpdated = this.lastProcessorIndexUpdated;\n    const steps = this.steps;\n\n    let prev = data;\n\n    try {\n      for (const processor of steps) {\n        const processorIndex = this.findProcessorIndexByID(processor.id);\n\n        if (processorIndex >= lastProcessorIndexUpdated) {\n          // we should execute process() here since the last\n          // updated processor was before \"processor\".\n          // This is to ensure that we always have correct and up to date\n          // data from processors and also to skip them when necessary\n          prev = await processor.process(prev);\n          this.cache.set(processor.id, prev);\n        } else {\n          // cached results already exist\n          prev = this.cache.get(processor.id);\n        }\n      }\n    } catch (e) {\n      log.error(e);\n      // trigger the onError callback\n      this.emit('error', prev);\n\n      // rethrow\n      throw e;\n    }\n\n    // means the pipeline is up to date\n    this.lastProcessorIndexUpdated = steps.length;\n\n    // triggers the afterProcess callbacks with the results\n    this.emit('afterProcess', prev);\n\n    return prev;\n  }\n\n  /**\n   * Returns the registered processor's index in _steps array\n   *\n   * @param processorID\n   */\n  private findProcessorIndexByID(processorID: ID): number {\n    return this.steps.findIndex((p) => p.id == processorID);\n  }\n\n  /**\n   * Sets the last updates processors index locally\n   * This is used to invalid or skip a processor in\n   * the process() method\n   */\n  private setLastProcessorIndex(processor: PipelineProcessor<T, P>): void {\n    const processorIndex = this.findProcessorIndexByID(processor.id);\n\n    if (this.lastProcessorIndexUpdated > processorIndex) {\n      this.lastProcessorIndexUpdated = processorIndex;\n    }\n  }\n\n  private processorPropsUpdated(processor): void {\n    this.setLastProcessorIndex(processor);\n    this.emit('propsUpdated');\n    this.emit('updated', processor);\n  }\n\n  private afterRegistered(processor): void {\n    this.setLastProcessorIndex(processor);\n    this.emit('afterRegister');\n    this.emit('updated', processor);\n  }\n}\n\nexport default Pipeline;\n", "import { ComponentChild } from 'preact';\nimport Row from './row';\nimport { SortConfig } from './view/plugin/sort/sort';\nimport { JSXInternal } from 'preact/src/jsx';\nimport { Plugin } from './plugin';\n\nexport type ProtoExtends<T, U> = U & Omit<T, keyof U>;\n\nexport type OneDArray<T> = T[];\nexport type TwoDArray<T> = T[][];\n\n/**\n * Table cell types\n */\nexport type TCell = number | string | boolean | ComponentChild | HTMLElement;\n// Array of Arrays\nexport type TDataArrayRow = OneDArray<TCell>;\nexport type TDataArray = OneDArray<TDataArrayRow>;\n// Array of Objects\nexport type TDataObjectRow = { [key: string]: TCell };\nexport type TDataObject = OneDArray<TDataObjectRow>;\n// (Array of Arrays) and (Array of Objects)\nexport type TData = TDataArray | TDataObject;\n\n// Table header cell type\nexport interface TColumn {\n  id?: string;\n  // default data for all columns\n  data?: ((row: TDataArrayRow | TDataObjectRow) => TCell) | TCell;\n  // column label\n  name?: string | ComponentChild;\n  plugin?: Plugin<any>;\n  // column width\n  width?: string;\n  minWidth?: string;\n  sort?: SortConfig;\n  columns?: OneDArray<TColumn>;\n  fixedHeader?: boolean;\n  resizable?: boolean;\n  hidden?: boolean;\n  formatter?: (cell: TCell, row: Row, column: TColumn) => ComponentChild;\n  // HTML attributes to be added to all cells and header of this column\n  attributes?:\n    | ((\n        // this is null when `attributes` is called for a th\n        cell: TCell | null,\n        row: Row | null,\n        column: TColumn,\n      ) => JSXInternal.HTMLAttributes<HTMLTableCellElement>)\n    | JSXInternal.HTMLAttributes<HTMLTableCellElement>;\n}\n\n// Comparator function for the sorting plugin\nexport type Comparator<T> = (a: T, b: T) => number;\n\nexport interface TColumnSort {\n  index: number;\n  // 1 ascending, -1 descending\n  direction?: 1 | -1;\n}\n\n// container status\nexport enum Status {\n  Init,\n  Loading,\n  Loaded,\n  Rendered,\n  Error,\n}\n\nexport type CSSDeclaration = {\n  [key: string]: string | number;\n};\n", "import Storage, { StorageResponse } from '../../storage/storage';\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\n\ninterface StorageExtractorProps extends PipelineProcessorProps {\n  storage: Storage<any>;\n}\n\nclass StorageExtractor extends PipelineProcessor<\n  Promise<StorageResponse>,\n  StorageExtractorProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Extractor;\n  }\n\n  async _process(opts: any): Promise<StorageResponse> {\n    return await this.props.storage.get(opts);\n  }\n}\n\nexport default StorageExtractor;\n", "import { PipelineProcessor, ProcessorType } from '../processor';\nimport Tabular from '../../tabular';\nimport { ArrayResponse } from './storageResponseToArray';\n\nclass ArrayToTabularTransformer extends PipelineProcessor<\n  Tabular,\n  Record<string, any>\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Transformer;\n  }\n\n  _process(arrayResponse: ArrayResponse): Tabular {\n    const tabular = Tabular.fromArray(arrayResponse.data);\n\n    // for server-side storage\n    tabular.length = arrayResponse.total;\n\n    return tabular;\n  }\n}\n\nexport default ArrayToTabularTransformer;\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { ServerStorageOptions } from '../../storage/server';\n\ninterface ServerInitiatorProps extends PipelineProcessorProps {\n  serverStorageOptions: ServerStorageOptions;\n}\n\nclass ServerInitiator extends PipelineProcessor<\n  ServerStorageOptions,\n  ServerInitiatorProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Initiator;\n  }\n\n  _process(): ServerStorageOptions {\n    return Object.entries(this.props.serverStorageOptions)\n      .filter(([_, val]) => typeof val !== 'function')\n      .reduce(\n        (acc, [k, v]) => ({ ...acc, [k]: v }),\n        {},\n      ) as ServerStorageOptions;\n  }\n}\n\nexport default ServerInitiator;\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { StorageResponse } from '../../storage/storage';\nimport { TCell, TData, TDataArray, TDataObject, TwoDArray } from '../../types';\nimport Header from '../../header';\nimport logger from '../../util/log';\n\nexport interface ArrayResponse {\n  data: TwoDArray<TCell>;\n  total: number;\n}\n\ninterface StorageResponseToArrayTransformerProps\n  extends PipelineProcessorProps {\n  header: Header;\n}\n\nclass StorageResponseToArrayTransformer extends PipelineProcessor<\n  ArrayResponse,\n  StorageResponseToArrayTransformerProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Transformer;\n  }\n\n  private castData(data: TData): TwoDArray<TCell> {\n    if (!data || !data.length) {\n      return [];\n    }\n\n    if (!this.props.header || !this.props.header.columns) {\n      return data as TwoDArray<TCell>;\n    }\n\n    const columns = Header.leafColumns(this.props.header.columns);\n\n    // if it's a 2d array already\n    if (data[0] instanceof Array) {\n      return (data as TDataArray).map((row) => {\n        let pad = 0;\n\n        return columns.map((column, i) => {\n          // default `data` is provided for this column\n          if (column.data !== undefined) {\n            pad++;\n\n            if (typeof column.data === 'function') {\n              return column.data(row);\n            } else {\n              return column.data;\n            }\n          }\n\n          return row[i - pad];\n        });\n      });\n    }\n\n    // if it's an array of objects (but not array of arrays, i.e JSON payload)\n    if (typeof data[0] === 'object' && !(data[0] instanceof Array)) {\n      return (data as TDataObject).map((row) =>\n        columns.map((column, i) => {\n          if (column.data !== undefined) {\n            if (typeof column.data === 'function') {\n              return column.data(row);\n            } else {\n              return column.data;\n            }\n          } else if (column.id) {\n            return row[column.id];\n          } else {\n            logger.error(`Could not find the correct cell for column at position ${i}.\n                          Make sure either 'id' or 'selector' is defined for all columns.`);\n            return null;\n          }\n        }),\n      );\n    }\n\n    return [];\n  }\n\n  _process(storageResponse: StorageResponse): ArrayResponse {\n    return {\n      data: this.castData(storageResponse.data),\n      total: storageResponse.total,\n    };\n  }\n}\n\nexport default StorageResponseToArrayTransformer;\n", "import { Config } from '../config';\nimport Pipeline from './pipeline';\nimport Tabular from '../tabular';\nimport StorageExtractor from './extractor/storage';\nimport ArrayToTabularTransformer from './transformer/arrayToTabular';\nimport ServerStorage from '../storage/server';\nimport ServerInitiator from './initiator/server';\nimport StorageResponseToArrayTransformer from './transformer/storageResponseToArray';\n\nclass PipelineUtils {\n  static createFromConfig(config: Config): Pipeline<Tabular> {\n    const pipeline = new Pipeline<Tabular>();\n\n    if (config.storage instanceof ServerStorage) {\n      pipeline.register(\n        new ServerInitiator({\n          serverStorageOptions: config.server,\n        }),\n      );\n    }\n\n    pipeline.register(new StorageExtractor({ storage: config.storage }));\n    pipeline.register(\n      new StorageResponseToArrayTransformer({ header: config.header }),\n    );\n    pipeline.register(new ArrayToTabularTransformer());\n\n    return pipeline;\n  }\n}\n\nexport default PipelineUtils;\n", "import {\n  CSSDeclaration,\n  OneDArray,\n  ProtoExtends,\n  TColumn,\n  TData,\n} from './types';\nimport Storage from './storage/storage';\nimport Pipeline from './pipeline/pipeline';\nimport Tabular from './tabular';\nimport { Search, SearchConfig } from './view/plugin/search/search';\nimport { Pagination, PaginationConfig } from './view/plugin/pagination';\nimport Header from './header';\nimport { ServerStorageOptions } from './storage/server';\nimport Dispatcher from './util/dispatcher';\nimport { GenericSortConfig } from './view/plugin/sort/sort';\nimport { Language, Translator } from './i18n/language';\nimport { Component, ComponentChild, createRef, RefObject } from 'preact';\nimport StorageUtils from './storage/storageUtils';\nimport PipelineUtils from './pipeline/pipelineUtils';\nimport { EventEmitter } from './util/eventEmitter';\nimport { GridEvents } from './events';\nimport { PluginManager, PluginPosition, Plugin } from './plugin';\nimport Grid from './grid';\n\n// Config type used internally\nexport interface Config {\n  // a reference to the current Grid.js instance\n  instance: Grid;\n  eventEmitter: EventEmitter<GridEvents>;\n  dispatcher: Dispatcher<any>;\n  plugin: PluginManager;\n  /** container element that is used to mount the Grid.js to */\n  // TODO: change this to an element reference\n  container?: Element;\n  /** pointer to the main table element */\n  tableRef?: RefObject<Component>;\n  /** gridjs-temp div which is used internally */\n  tempRef?: RefObject<HTMLDivElement>;\n  data?: TData | (() => TData) | (() => Promise<TData>);\n  server?: ServerStorageOptions;\n  header?: Header;\n  /** to parse a HTML table and load the data */\n  from: HTMLElement;\n  storage: Storage<any>;\n  pipeline: Pipeline<Tabular>;\n  /** to automatically calculate the columns width */\n  autoWidth: boolean;\n  /** sets the width of the container and table */\n  width: string;\n  /** sets the height of the table */\n  height: string;\n  pagination: PaginationConfig;\n  sort: GenericSortConfig;\n  translator: Translator;\n  style?: Partial<{\n    table: CSSDeclaration;\n    td: CSSDeclaration;\n    th: CSSDeclaration;\n    container: CSSDeclaration;\n    header: CSSDeclaration;\n    footer: CSSDeclaration;\n  }>;\n  className?: Partial<{\n    table: string;\n    th: string;\n    thead: string;\n    tbody: string;\n    tr: string;\n    td: string;\n    container: string;\n    footer: string;\n    header: string;\n    search: string;\n    sort: string;\n    pagination: string;\n    paginationSummary: string;\n    paginationButton: string;\n    paginationButtonNext: string;\n    paginationButtonCurrent: string;\n    paginationButtonPrev: string;\n    loading: string;\n    notfound: string;\n    error: string;\n  }>;\n}\n\n// Config type used by the consumers\ninterface UserConfigExtend {\n  /** fixes the table header to the top of the table */\n  fixedHeader: boolean;\n  /** Resizable columns? */\n  resizable: boolean;\n  columns: OneDArray<TColumn | string | ComponentChild>;\n  search: SearchConfig | boolean;\n  pagination: PaginationConfig | boolean;\n  // implicit option to enable the sort plugin globally\n  sort: GenericSortConfig | boolean;\n  language: Language;\n  plugins?: Plugin<any>[];\n}\n\nexport type UserConfig = ProtoExtends<\n  Partial<Config>,\n  Partial<UserConfigExtend>\n>;\n\nexport class Config {\n  // this is the config file passed by the user\n  // we need this for Config.update()\n  private _userConfig: UserConfig;\n\n  constructor(config?: Partial<Config>) {\n    Object.assign(this, {\n      ...Config.defaultConfig(),\n      ...config,\n    });\n\n    this._userConfig = {};\n  }\n\n  /**\n   * Assigns `updatedConfig` keys to the current config file\n   *\n   * @param updatedConfig\n   */\n  assign(updatedConfig: Partial<Config>): Config {\n    for (const key of Object.keys(updatedConfig)) {\n      // because we don't want to update the _userConfig cache\n      if (key === '_userConfig') continue;\n\n      this[key] = updatedConfig[key];\n    }\n\n    return this;\n  }\n\n  /**\n   * Updates the config from a UserConfig\n   *\n   * @param userConfig\n   */\n  update(userConfig: Partial<UserConfig>): Config {\n    if (!userConfig) return this;\n\n    this._userConfig = {\n      ...this._userConfig,\n      ...userConfig,\n    };\n\n    this.assign(Config.fromUserConfig(this._userConfig));\n\n    return this;\n  }\n\n  static defaultConfig(): Config {\n    return {\n      plugin: new PluginManager(),\n      dispatcher: new Dispatcher<any>(),\n      tableRef: createRef(),\n      tempRef: createRef(),\n      width: '100%',\n      height: 'auto',\n      autoWidth: true,\n      style: {},\n      className: {},\n    } as Config;\n  }\n\n  static fromUserConfig(userConfig: UserConfig): Config {\n    const config = new Config(userConfig as Config);\n\n    // to set the initial _userConfig object\n    config._userConfig = userConfig;\n\n    // Sort\n    if (typeof userConfig.sort === 'boolean' && userConfig.sort) {\n      config.assign({\n        sort: {\n          multiColumn: true,\n        },\n      });\n    }\n\n    // Header\n    config.assign({\n      header: Header.fromUserConfig(config),\n    });\n\n    config.assign({\n      storage: StorageUtils.createFromUserConfig(userConfig),\n    });\n\n    config.assign({\n      pipeline: PipelineUtils.createFromConfig(config),\n    });\n\n    // Translator\n    config.assign({\n      translator: new Translator(userConfig.language),\n    });\n\n    // Search\n    config.plugin.add({\n      id: 'search',\n      position: PluginPosition.Header,\n      component: Search,\n      props: {\n        enabled:\n          userConfig.search === true || userConfig.search instanceof Object,\n        ...(userConfig.search as SearchConfig),\n      },\n    });\n\n    // Pagination\n    config.plugin.add({\n      id: 'pagination',\n      position: PluginPosition.Footer,\n      component: Pagination,\n      props: {\n        enabled:\n          userConfig.pagination === true ||\n          userConfig.pagination instanceof Object,\n        ...(userConfig.pagination as PaginationConfig),\n      },\n    });\n\n    // Additional plugins\n    if (userConfig.plugins) {\n      userConfig.plugins.forEach((p) => config.plugin.add(p));\n    }\n\n    return config;\n  }\n}\n", "import{options as n}from\"preact\";var t,r,u,i,o=0,c=[],f=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:f}),i.__[t]}function p(n){return o=1,y(z,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):z(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var c=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!!i&&(!c||c.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&&w(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&&w(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return w(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function V(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n){u.__&&u.__(n),i[1](n)}),[i[0],function(){i[1](void 0)}]}function b(){for(var t;t=c.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(j),t.__H.__h.forEach(k),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=f,n.__N=n.i=void 0})):(i.__h.forEach(j),i.__h.forEach(k),i.__h=[])),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==c.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||function(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))})(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==f&&(n.__=n.__V),n.i=void 0,n.__V=f})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(j),t.__h=t.__h.filter(function(n){return!n.__||k(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{j(n)}catch(n){r=n}}),r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function k(n){var t=r;n.__c=n.__(),r=t}function w(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function z(n,t){return\"function\"==typeof t?t(n):t}export{p as useState,y as useReducer,h as useEffect,s as useLayoutEffect,_ as useRef,A as useImperativeHandle,F as useMemo,T as useCallback,q as useContext,x as useDebugValue,V as useErrorBoundary};\n//# sourceMappingURL=hooks.module.js.map\n", "import { ComponentChild, h, JSX } from 'preact';\n\nimport Cell from '../../cell';\nimport { BaseComponent, BaseProps } from '../base';\nimport { classJoin, className } from '../../util/className';\nimport { CSSDeclaration, TColumn } from '../../types';\nimport Row from '../../row';\nimport { JSXInternal } from 'preact/src/jsx';\nimport { PluginRenderer } from '../../plugin';\n\nexport interface TDProps\n  extends BaseProps,\n    JSX.HTMLAttributes<HTMLTableCellElement> {\n  cell: Cell;\n  row?: Row;\n  column?: TColumn;\n  style?: CSSDeclaration;\n  messageCell?: boolean;\n}\n\nexport class TD extends BaseComponent<TDProps> {\n  private content(): ComponentChild {\n    if (\n      this.props.column &&\n      typeof this.props.column.formatter === 'function'\n    ) {\n      return this.props.column.formatter(\n        this.props.cell.data,\n        this.props.row,\n        this.props.column,\n      );\n    }\n\n    if (this.props.column && this.props.column.plugin) {\n      return (\n        <PluginRenderer\n          pluginId={this.props.column.id}\n          props={{\n            column: this.props.column,\n            cell: this.props.cell,\n            row: this.props.row,\n          }}\n        />\n      );\n    }\n\n    return this.props.cell.data;\n  }\n\n  private handleClick(e: JSX.TargetedMouseEvent<HTMLTableCellElement>): void {\n    if (this.props.messageCell) return;\n    this.config.eventEmitter.emit(\n      'cellClick',\n      e,\n      this.props.cell,\n      this.props.column,\n      this.props.row,\n    );\n  }\n\n  private getCustomAttributes(\n    column: TColumn | null,\n  ): JSXInternal.HTMLAttributes<HTMLTableCellElement> {\n    if (!column) return {};\n\n    if (typeof column.attributes === 'function') {\n      return column.attributes(\n        this.props.cell.data,\n        this.props.row,\n        this.props.column,\n      );\n    } else {\n      return column.attributes;\n    }\n  }\n\n  render() {\n    return (\n      <td\n        role={this.props.role}\n        colSpan={this.props.colSpan}\n        data-column-id={this.props.column && this.props.column.id}\n        className={classJoin(\n          className('td'),\n          this.props.className,\n          this.config.className.td,\n        )}\n        style={{\n          ...this.props.style,\n          ...this.config.style.td,\n        }}\n        onClick={this.handleClick.bind(this)}\n        {...this.getCustomAttributes(this.props.column)}\n      >\n        {this.content()}\n      </td>\n    );\n  }\n}\n", "import { h, JSX, Fragment, ComponentChildren } from 'preact';\n\nimport Row from '../../row';\nimport Cell from '../../cell';\nimport { BaseComponent, BaseProps } from '../base';\nimport { classJoin, className } from '../../util/className';\nimport { TColumn } from '../../types';\nimport { TD } from './td';\nimport Header from '../../header';\n\nexport interface TRProps extends BaseProps {\n  row?: Row;\n  header?: Header;\n  messageRow?: boolean;\n}\n\nexport class TR extends BaseComponent<TRProps> {\n  private getColumn(cellIndex: number): TColumn {\n    if (this.props.header) {\n      const cols = Header.leafColumns(this.props.header.columns);\n\n      if (cols) {\n        return cols[cellIndex];\n      }\n    }\n\n    return null;\n  }\n\n  private handleClick(e: JSX.TargetedMouseEvent<HTMLTableRowElement>): void {\n    if (this.props.messageRow) return;\n    this.config.eventEmitter.emit('rowClick', e, this.props.row);\n  }\n\n  private getChildren(): ComponentChildren {\n    if (this.props.children) {\n      return this.props.children;\n    } else {\n      return (\n        <Fragment>\n          {this.props.row.cells.map((cell: Cell, i) => {\n            const column = this.getColumn(i);\n\n            if (column && column.hidden) return null;\n\n            return (\n              <TD\n                key={cell.id}\n                cell={cell}\n                row={this.props.row}\n                column={column}\n              />\n            );\n          })}\n        </Fragment>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <tr\n        className={classJoin(className('tr'), this.config.className.tr)}\n        onClick={this.handleClick.bind(this)}\n      >\n        {this.getChildren()}\n      </tr>\n    );\n  }\n}\n", "import { h } from 'preact';\n\nimport Cell from '../../cell';\nimport { BaseComponent, BaseProps } from '../base';\nimport { classJoin, className } from '../../util/className';\nimport { TR } from './tr';\nimport { TD } from './td';\n\nexport interface MessageRowProps extends BaseProps {\n  message: string;\n  colSpan?: number;\n  className?: string;\n}\n\nexport class MessageRow extends BaseComponent<MessageRowProps> {\n  render() {\n    return (\n      <TR messageRow={true}>\n        <TD\n          role=\"alert\"\n          colSpan={this.props.colSpan}\n          messageCell={true}\n          cell={new Cell(this.props.message)}\n          className={classJoin(\n            className('message'),\n            this.props.className ? this.props.className : null,\n          )}\n        />\n      </TR>\n    );\n  }\n}\n", "import { h } from 'preact';\n\nimport Row from '../../row';\nimport { TR } from './tr';\nimport Tabular from '../../tabular';\nimport { BaseComponent, BaseProps } from '../base';\nimport { classJoin, className } from '../../util/className';\nimport { Status } from '../../types';\nimport Header from '../../header';\nimport { MessageRow } from './messageRow';\n\ninterface TBodyProps extends BaseProps {\n  data: Tabular;\n  status: Status;\n  header?: Header;\n}\n\nexport class TBody extends BaseComponent<TBodyProps> {\n  private headerLength(): number {\n    if (this.props.header) {\n      return this.props.header.visibleColumns.length;\n    }\n    return 0;\n  }\n\n  render() {\n    return (\n      <tbody\n        className={classJoin(className('tbody'), this.config.className.tbody)}\n      >\n        {this.props.data &&\n          this.props.data.rows.map((row: Row) => {\n            return <TR key={row.id} row={row} header={this.props.header} />;\n          })}\n\n        {this.props.status === Status.Loading &&\n          (!this.props.data || this.props.data.length === 0) && (\n            <MessageRow\n              message={this._('loading')}\n              colSpan={this.headerLength()}\n              className={classJoin(\n                className('loading'),\n                this.config.className.loading,\n              )}\n            />\n          )}\n\n        {this.props.status === Status.Rendered &&\n          this.props.data &&\n          this.props.data.length === 0 && (\n            <MessageRow\n              message={this._('noRecordsFound')}\n              colSpan={this.headerLength()}\n              className={classJoin(\n                className('notfound'),\n                this.config.className.notfound,\n              )}\n            />\n          )}\n\n        {this.props.status === Status.Error && (\n          <MessageRow\n            message={this._('error')}\n            colSpan={this.headerLength()}\n            className={classJoin(\n              className('error'),\n              this.config.className.error,\n            )}\n          />\n        )}\n      </tbody>\n    );\n  }\n}\n", "import { Comparator, TCell } from '../../types';\nimport Tabular from '../../tabular';\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport Row from '../../row';\nimport log from '../../util/log';\n\ninterface NativeSortProps extends PipelineProcessorProps {\n  columns: {\n    index: number;\n    // 1 ascending, -1 descending\n    direction?: 1 | -1;\n    compare?: Comparator<TCell>;\n  }[];\n}\n\nclass NativeSort extends PipelineProcessor<Tabular, NativeSortProps> {\n  protected validateProps(): void {\n    for (const condition of this.props.columns) {\n      if (condition.direction === undefined) {\n        condition.direction = 1;\n      }\n\n      if (condition.direction !== 1 && condition.direction !== -1) {\n        log.error(`Invalid sort direction ${condition.direction}`);\n      }\n    }\n  }\n\n  get type(): ProcessorType {\n    return ProcessorType.Sort;\n  }\n\n  private compare(cellA: TCell, cellB: TCell): number {\n    if (cellA > cellB) {\n      return 1;\n    } else if (cellA < cellB) {\n      return -1;\n    }\n\n    return 0;\n  }\n\n  private compareWrapper(a: Row, b: Row): number {\n    let cmp = 0;\n\n    for (const column of this.props.columns) {\n      if (cmp === 0) {\n        const cellA = a.cells[column.index].data;\n        const cellB = b.cells[column.index].data;\n\n        if (typeof column.compare === 'function') {\n          cmp |= column.compare(cellA, cellB) * column.direction;\n        } else {\n          cmp |= this.compare(cellA, cellB) * column.direction;\n        }\n      } else {\n        break;\n      }\n    }\n\n    return cmp;\n  }\n\n  protected _process(data: Tabular): Tabular {\n    const sortedRows = [...data.rows];\n    sortedRows.sort(this.compareWrapper.bind(this));\n\n    const sorted = new Tabular(sortedRows);\n    // we have to set the tabular length manually\n    // because of the server-side storage\n    sorted.length = data.length;\n\n    return sorted;\n  }\n}\n\nexport default NativeSort;\n", "import BaseStore from '../../base/store';\nimport { SortActionsType } from './actions';\nimport { Comparator, TCell } from '../../../types';\n\nexport type SortStoreState = {\n  index: number;\n  direction: 1 | -1;\n  compare?: Comparator<TCell>;\n}[];\n\nexport class SortStore extends BaseStore<SortStoreState, SortActionsType> {\n  getInitialState(): SortStoreState {\n    return [];\n  }\n\n  handle(type, payload): void {\n    if (type === 'SORT_COLUMN') {\n      const { index, direction, multi, compare } = payload;\n      this.sortColumn(index, direction, multi, compare);\n    } else if (type === 'SORT_COLUMN_TOGGLE') {\n      const { index, multi, compare } = payload;\n      this.sortToggle(index, multi, compare);\n    }\n  }\n\n  private sortToggle(\n    index: number,\n    multi: boolean,\n    compare: Comparator<TCell>,\n  ): void {\n    const columns = [...this.state];\n    const column = columns.find((x) => x.index === index);\n\n    if (!column) {\n      this.sortColumn(index, 1, multi, compare);\n    } else {\n      this.sortColumn(index, column.direction === 1 ? -1 : 1, multi, compare);\n    }\n  }\n\n  private sortColumn(\n    index: number,\n    direction: 1 | -1,\n    multi: boolean,\n    compare: Comparator<TCell>,\n  ): void {\n    let columns = [...this.state];\n    const count = columns.length;\n    const column = columns.find((x) => x.index === index);\n    const exists = column !== undefined;\n\n    let add = false;\n    let reset = false;\n    let remove = false;\n    let update = false;\n\n    if (!exists) {\n      // the column has not been sorted\n      if (count === 0) {\n        // the first column to be sorted\n        add = true;\n      } else if (count > 0 && !multi) {\n        // remove the previously sorted column\n        // and sort the current column\n        add = true;\n        reset = true;\n      } else if (count > 0 && multi) {\n        // multi-sorting\n        // sort this column as well\n        add = true;\n      }\n    } else {\n      // the column has been sorted before\n      if (!multi) {\n        // single column sorting\n        if (count === 1) {\n          update = true;\n        } else if (count > 1) {\n          // this situation happens when we have already entered\n          // multi-sorting mode but then user tries to sort a single column\n          reset = true;\n          add = true;\n        }\n      } else {\n        // multi sorting\n        if (column.direction === -1) {\n          // remove the current column from the\n          // sorted columns array\n          remove = true;\n        } else {\n          update = true;\n        }\n      }\n    }\n\n    if (reset) {\n      // resetting the sorted columns\n      columns = [];\n    }\n\n    if (add) {\n      columns.push({\n        index: index,\n        direction: direction,\n        compare: compare,\n      });\n    } else if (update) {\n      const index = columns.indexOf(column);\n      columns[index].direction = direction;\n    } else if (remove) {\n      const index = columns.indexOf(column);\n      columns.splice(index, 1);\n    }\n\n    this.setState(columns);\n  }\n}\n", "import { BaseActions } from '../../base/actions';\nimport { Comparator, TCell } from '../../../types';\n\nexport interface SortActionsType {\n  SORT_COLUMN: {\n    index: number;\n    direction: 1 | -1;\n    multi?: boolean;\n    compare?: Comparator<TCell>;\n  };\n\n  SORT_COLUMN_TOGGLE: {\n    index: number;\n    multi?: boolean;\n    compare?: Comparator<TCell>;\n  };\n}\n\nexport class SortActions extends BaseActions<SortActionsType> {\n  sortColumn(\n    index: number,\n    direction: 1 | -1,\n    multi?: boolean,\n    compare?: Comparator<TCell>,\n  ): void {\n    this.dispatch('SORT_COLUMN', {\n      index: index,\n      direction: direction,\n      multi: multi,\n      compare: compare,\n    });\n  }\n\n  sortToggle(\n    index: number,\n    multi?: boolean,\n    compare?: Comparator<TCell>,\n  ): void {\n    this.dispatch('SORT_COLUMN_TOGGLE', {\n      index: index,\n      multi: multi,\n      compare: compare,\n    });\n  }\n}\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { ServerStorageOptions } from '../../storage/server';\nimport { TColumnSort } from '../../types';\n\ninterface ServerSortProps extends PipelineProcessorProps {\n  columns: TColumnSort[];\n  url?: (prevUrl: string, columns: TColumnSort[]) => string;\n  body?: (prevBody: BodyInit, columns: TColumnSort[]) => BodyInit;\n}\n\nclass ServerSort extends PipelineProcessor<\n  ServerStorageOptions,\n  ServerSortProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.ServerSort;\n  }\n\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\n    const updates = {};\n\n    if (this.props.url) {\n      updates['url'] = this.props.url(options.url, this.props.columns);\n    }\n\n    if (this.props.body) {\n      updates['body'] = this.props.body(options.body, this.props.columns);\n    }\n\n    return {\n      ...options,\n      ...updates,\n    };\n  }\n}\n\nexport default ServerSort;\n", "import { h, JSX } from 'preact';\n\nimport { BaseComponent, BaseProps } from '../../base';\nimport { classJoin, className } from '../../../util/className';\nimport { ProcessorType } from '../../../pipeline/processor';\nimport NativeSort from '../../../pipeline/sort/native';\nimport { SortStore, SortStoreState } from './store';\nimport { Comparator, TCell, TColumnSort } from '../../../types';\nimport { SortActions } from './actions';\nimport ServerSort from '../../../pipeline/sort/server';\n\n// column specific config\nexport interface SortConfig {\n  enabled?: boolean;\n  compare?: Comparator<TCell>;\n}\n\n// generic sort config:\n//\n// Config {\n//    sort: GenericSortConfig\n// }\n//\nexport interface GenericSortConfig {\n  multiColumn?: boolean;\n  server?: {\n    url?: (prevUrl: string, columns: TColumnSort[]) => string;\n    body?: (prevBody: BodyInit, columns: TColumnSort[]) => BodyInit;\n  };\n}\n\nexport interface SortProps extends BaseProps {\n  // column index\n  index: number;\n}\n\ninterface SortState {\n  direction: 1 | -1 | 0;\n}\n\nexport class Sort extends BaseComponent<SortProps & SortConfig, SortState> {\n  private readonly sortProcessor: NativeSort | ServerSort;\n  private readonly actions: SortActions;\n  private readonly store: SortStore;\n  private readonly updateStateFn: (...args) => void;\n  private updateSortProcessorFn: (sortedColumns: SortStoreState) => void;\n\n  constructor(props: SortProps & SortConfig, context) {\n    super(props, context);\n\n    this.actions = new SortActions(this.config.dispatcher);\n    this.store = new SortStore(this.config.dispatcher);\n\n    if (props.enabled) {\n      this.sortProcessor = this.getOrCreateSortProcessor();\n      this.updateStateFn = this.updateState.bind(this);\n      this.store.on('updated', this.updateStateFn);\n      this.state = { direction: 0 };\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.config.pipeline.unregister(this.sortProcessor);\n\n    this.store.off('updated', this.updateStateFn);\n    if (this.updateSortProcessorFn)\n      this.store.off('updated', this.updateSortProcessorFn);\n  }\n\n  /**\n   * Sets the internal state of component\n   */\n  private updateState(): void {\n    const currentColumn = this.store.state.find(\n      (x) => x.index === this.props.index,\n    );\n\n    if (!currentColumn) {\n      this.setState({\n        direction: 0,\n      });\n    } else {\n      this.setState({\n        direction: currentColumn.direction,\n      });\n    }\n  }\n\n  private updateSortProcessor(sortedColumns: SortStoreState) {\n    // updates the Sorting processor\n    this.sortProcessor.setProps({\n      columns: sortedColumns,\n    });\n  }\n\n  private getOrCreateSortProcessor(): NativeSort {\n    let processorType = ProcessorType.Sort;\n\n    if (this.config.sort && typeof this.config.sort.server === 'object') {\n      processorType = ProcessorType.ServerSort;\n    }\n\n    const processors = this.config.pipeline.getStepsByType(processorType);\n\n    // my assumption is that we only have ONE sorting processor in the\n    // entire pipeline and that's why I'm displaying a warning here\n    let processor;\n\n    // A sort process is already registered\n    if (processors.length > 0) {\n      processor = processors[0];\n    } else {\n      // let's create a new sort processor\n\n      // this event listener is here because\n      // we want to subscribe to the sort store only once\n      this.updateSortProcessorFn = this.updateSortProcessor.bind(this);\n      this.store.on('updated', this.updateSortProcessorFn);\n\n      if (processorType === ProcessorType.ServerSort) {\n        processor = new ServerSort({\n          columns: this.store.state,\n          ...this.config.sort.server,\n        });\n      } else {\n        processor = new NativeSort({\n          columns: this.store.state,\n        });\n      }\n\n      this.config.pipeline.register(processor);\n    }\n\n    return processor;\n  }\n\n  changeDirection(e: JSX.TargetedMouseEvent<HTMLButtonElement>): void {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // to sort two or more columns at the same time\n    this.actions.sortToggle(\n      this.props.index,\n      e.shiftKey === true && this.config.sort.multiColumn,\n      this.props.compare,\n    );\n  }\n\n  render() {\n    if (!this.props.enabled) {\n      return null;\n    }\n\n    const direction = this.state.direction;\n    let sortClassName = 'neutral';\n\n    if (direction === 1) {\n      sortClassName = 'asc';\n    } else if (direction === -1) {\n      sortClassName = 'desc';\n    }\n\n    return (\n      <button\n        // because the corresponding <th> has tabIndex=0\n        tabIndex={-1}\n        aria-label={this._(`sort.sort${direction === 1 ? 'Desc' : 'Asc'}`)}\n        title={this._(`sort.sort${direction === 1 ? 'Desc' : 'Asc'}`)}\n        className={classJoin(\n          className('sort'),\n          className('sort', sortClassName),\n          this.config.className.sort,\n        )}\n        onClick={this.changeDirection.bind(this)}\n      />\n    );\n  }\n}\n", "import { h, RefObject } from 'preact';\nimport { classJoin, className } from '../../../util/className';\nimport { BaseComponent } from '../../base';\nimport { TColumn } from '../../../types';\nimport { TH } from '../../table/th';\nimport { throttle } from '../../../util/throttle';\n\ntype ResizeProps = {\n  column: TColumn;\n  thRef: RefObject<TH>;\n};\n\ntype ResizeState = {\n  width: string;\n  offsetStart: number;\n};\n\nexport class Resize extends BaseComponent<ResizeProps, ResizeState> {\n  private moveFn: (e) => void;\n  private upFn: (e) => void;\n\n  private getPageX(e: MouseEvent | TouchEvent): number {\n    if (e instanceof MouseEvent) {\n      return Math.floor(e.pageX);\n    } else {\n      return Math.floor(e.changedTouches[0].pageX);\n    }\n  }\n\n  private start(e: MouseEvent | TouchEvent): void {\n    e.stopPropagation();\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const thElement: HTMLElement = this.props.thRef.current;\n\n    this.setState({\n      offsetStart: parseInt(thElement.style.width, 10) - this.getPageX(e),\n    });\n\n    this.upFn = this.end.bind(this);\n    this.moveFn = throttle(this.move.bind(this), 10);\n\n    document.addEventListener('mouseup', this.upFn);\n    document.addEventListener('touchend', this.upFn);\n    document.addEventListener('mousemove', this.moveFn);\n    document.addEventListener('touchmove', this.moveFn);\n  }\n\n  private move(e: MouseEvent | TouchEvent): void {\n    e.stopPropagation();\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const thElement: HTMLElement = this.props.thRef.current;\n\n    if (\n      this.state.offsetStart + this.getPageX(e) >=\n      parseInt(thElement.style.minWidth, 10)\n    ) {\n      thElement.style.width = `${this.state.offsetStart + this.getPageX(e)}px`;\n    }\n  }\n\n  private end(e: MouseEvent | TouchEvent): void {\n    e.stopPropagation();\n\n    document.removeEventListener('mouseup', this.upFn);\n    document.removeEventListener('mousemove', this.moveFn);\n    document.removeEventListener('touchmove', this.moveFn);\n    document.removeEventListener('touchend', this.upFn);\n  }\n\n  render() {\n    return (\n      <div\n        className={classJoin(className('th'), className('resizable'))}\n        onMouseDown={this.start.bind(this)}\n        onTouchStart={this.start.bind(this)}\n        onClick={(e) => e.stopPropagation()}\n      />\n    );\n  }\n}\n", "export const throttle = (fn: (...args) => void, wait = 100) => {\n  let inThrottle: boolean;\n  let lastFn: ReturnType<typeof setTimeout>;\n  let lastTime: number;\n\n  return (...args) => {\n    if (!inThrottle) {\n      fn(...args);\n      lastTime = Date.now();\n      inThrottle = true;\n    } else {\n      clearTimeout(lastFn);\n      lastFn = setTimeout(() => {\n        if (Date.now() - lastTime >= wait) {\n          fn(...args);\n          lastTime = Date.now();\n        }\n      }, Math.max(wait - (Date.now() - lastTime), 0));\n    }\n  };\n};\n", "import { ComponentChild, createRef, h, JSX } from 'preact';\n\nimport { BaseComponent, BaseProps } from '../base';\nimport { classJoin, className } from '../../util/className';\nimport { CSSDeclaration, TColumn } from '../../types';\nimport { Sort } from '../plugin/sort/sort';\nimport { PluginRenderer } from '../../plugin';\nimport { JSXInternal } from 'preact/src/jsx';\nimport { Resize } from '../plugin/resize/resize';\n\nexport interface THProps\n  extends BaseProps,\n    JSX.HTMLAttributes<HTMLTableCellElement> {\n  index: number;\n  column: TColumn;\n  style?: CSSDeclaration;\n}\n\nexport interface THState {\n  style: CSSDeclaration;\n}\n\nexport class TH extends BaseComponent<THProps, THState> {\n  private sortRef = createRef();\n  private thRef = createRef();\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      style: {},\n    };\n  }\n\n  private isSortable(): boolean {\n    return this.props.column.sort.enabled;\n  }\n\n  private isResizable(): boolean {\n    return this.props.column.resizable;\n  }\n\n  private onClick(e: JSX.TargetedMouseEvent<HTMLInputElement>): void {\n    e.stopPropagation();\n\n    if (this.isSortable()) {\n      this.sortRef.current.changeDirection(e);\n    }\n  }\n\n  private keyDown(e: JSX.TargetedMouseEvent<HTMLInputElement>): void {\n    if (this.isSortable() && e.which === 13) {\n      this.onClick(e);\n    }\n  }\n\n  componentDidMount(): void {\n    setTimeout(() => {\n      // sets the `top` style if the current TH is fixed\n      if (this.props.column.fixedHeader && this.thRef.current) {\n        const offsetTop = this.thRef.current.offsetTop;\n\n        if (typeof offsetTop === 'number') {\n          this.setState({\n            style: {\n              top: offsetTop,\n            },\n          });\n        }\n      }\n    }, 0);\n  }\n\n  private content(): ComponentChild {\n    if (this.props.column.name !== undefined) {\n      return this.props.column.name;\n    }\n\n    if (this.props.column.plugin !== undefined) {\n      return (\n        <PluginRenderer\n          pluginId={this.props.column.plugin.id}\n          props={{\n            column: this.props.column,\n          }}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  private getCustomAttributes(): JSXInternal.HTMLAttributes<HTMLTableCellElement> {\n    const column = this.props.column;\n\n    if (!column) return {};\n\n    if (typeof column.attributes === 'function') {\n      return column.attributes(null, null, this.props.column);\n    } else {\n      return column.attributes;\n    }\n  }\n\n  render() {\n    const props = {};\n\n    if (this.isSortable()) {\n      props['tabIndex'] = 0;\n    }\n\n    return (\n      <th\n        ref={this.thRef}\n        data-column-id={this.props.column && this.props.column.id}\n        className={classJoin(\n          className('th'),\n          this.isSortable() ? className('th', 'sort') : null,\n          this.props.column.fixedHeader ? className('th', 'fixed') : null,\n          this.config.className.th,\n        )}\n        onClick={this.onClick.bind(this)}\n        style={{\n          ...this.config.style.th,\n          ...{\n            minWidth: this.props.column.minWidth,\n            width: this.props.column.width,\n          },\n          ...this.state.style,\n          ...this.props.style,\n        }}\n        onKeyDown={this.keyDown.bind(this)}\n        rowSpan={this.props.rowSpan > 1 ? this.props.rowSpan : undefined}\n        colSpan={this.props.colSpan > 1 ? this.props.colSpan : undefined}\n        {...this.getCustomAttributes()}\n        {...props}\n      >\n        <div className={className('th', 'content')}>{this.content()}</div>\n        {this.isSortable() && (\n          <Sort\n            ref={this.sortRef}\n            index={this.props.index}\n            {...this.props.column.sort}\n          />\n        )}\n        {this.isResizable() &&\n          this.props.index < this.config.header.visibleColumns.length - 1 && (\n            <Resize column={this.props.column} thRef={this.thRef} />\n          )}\n      </th>\n    );\n  }\n}\n", "import { ComponentChild, h } from 'preact';\n\nimport { TR } from './tr';\nimport { BaseComponent, BaseProps } from '../base';\nimport { TH } from './th';\nimport { classJoin, className } from '../../util/className';\nimport Header from '../../header';\nimport { TColumn } from '../../types';\nimport { calculateRowColSpans } from '../../util/table';\n\ninterface THeadProps extends BaseProps {\n  header: Header;\n}\n\nexport class THead extends BaseComponent<THeadProps> {\n  private renderColumn(\n    column: TColumn,\n    rowIndex: number,\n    columnIndex: number,\n    totalRows: number,\n  ): ComponentChild {\n    const { rowSpan, colSpan } = calculateRowColSpans(\n      column,\n      rowIndex,\n      totalRows,\n    );\n\n    return (\n      <TH\n        column={column}\n        index={columnIndex}\n        colSpan={colSpan}\n        rowSpan={rowSpan}\n      />\n    );\n  }\n\n  private renderRow(\n    row: TColumn[],\n    rowIndex: number,\n    totalRows: number,\n  ): ComponentChild {\n    // because the only sortable columns are leaf columns (not parents)\n    const leafColumns = Header.leafColumns(this.props.header.columns);\n\n    return (\n      <TR>\n        {row.map((col) => {\n          if (col.hidden) return null;\n\n          return this.renderColumn(\n            col,\n            rowIndex,\n            leafColumns.indexOf(col),\n            totalRows,\n          );\n        })}\n      </TR>\n    );\n  }\n\n  private renderRows(): ComponentChild {\n    const rows = Header.tabularFormat(this.props.header.columns);\n\n    return rows.map((row, rowIndex) =>\n      this.renderRow(row, rowIndex, rows.length),\n    );\n  }\n\n  render() {\n    if (this.props.header) {\n      return (\n        <thead\n          key={this.props.header.id}\n          className={classJoin(className('thead'), this.config.className.thead)}\n        >\n          {this.renderRows()}\n        </thead>\n      );\n    }\n\n    return null;\n  }\n}\n", "import { TColumn } from '../types';\nimport Header from '../header';\n\nexport function calculateRowColSpans(\n  column: TColumn,\n  rowIndex: number,\n  totalRows: number,\n): { rowSpan: number; colSpan: number } {\n  const depth = Header.maximumDepth(column);\n  const remainingRows = totalRows - rowIndex;\n  const rowSpan = Math.floor(remainingRows - depth - depth / remainingRows);\n  const colSpan = (column.columns && column.columns.length) || 1;\n\n  return {\n    rowSpan: rowSpan,\n    colSpan: colSpan,\n  };\n}\n", "import { h } from 'preact';\n\nimport Tabular from '../../tabular';\nimport { TBody } from './tbody';\nimport { THead } from './thead';\nimport { BaseComponent, BaseProps } from '../base';\nimport Header from '../../header';\nimport { classJoin, className } from '../../util/className';\nimport { Status } from '../../types';\n\ninterface TableProps extends BaseProps {\n  data: Tabular;\n  status: Status;\n  header?: Header;\n  width: string;\n  height: string;\n}\n\nexport class Table extends BaseComponent<TableProps> {\n  render() {\n    return (\n      <table\n        role=\"grid\"\n        className={classJoin(className('table'), this.config.className.table)}\n        style={{\n          ...this.config.style.table,\n          ...{\n            height: this.props.height,\n          },\n        }}\n      >\n        <THead header={this.props.header} />\n        <TBody\n          data={this.props.data}\n          status={this.props.status}\n          header={this.props.header}\n        />\n      </table>\n    );\n  }\n}\n", "import { createRef, h } from 'preact';\n\nimport { BaseComponent } from './base';\nimport { classJoin, className } from '../util/className';\nimport { PluginPosition, PluginRenderer } from '../plugin';\n\ninterface HeaderContainerState {\n  isActive: boolean;\n}\n\nexport class HeaderContainer extends BaseComponent<\n  Record<string, any>,\n  HeaderContainerState\n> {\n  private headerRef = createRef();\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      isActive: true,\n    };\n  }\n\n  componentDidMount() {\n    if (this.headerRef.current.children.length === 0) {\n      this.setState({\n        isActive: false,\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isActive) {\n      return (\n        <div\n          ref={this.headerRef}\n          className={classJoin(className('head'), this.config.className.header)}\n          style={{ ...this.config.style.header }}\n        >\n          <PluginRenderer position={PluginPosition.Header} />\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n", "import { createRef, h } from 'preact';\n\nimport { BaseComponent } from './base';\nimport { classJoin, className } from '../util/className';\nimport { PluginPosition, PluginRenderer } from '../plugin';\n\ninterface FooterContainerState {\n  isActive: boolean;\n}\n\nexport class FooterContainer extends BaseComponent<\n  Record<string, any>,\n  FooterContainerState\n> {\n  private footerRef = createRef();\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      isActive: true,\n    };\n  }\n\n  componentDidMount() {\n    if (this.footerRef.current.children.length === 0) {\n      this.setState({\n        isActive: false,\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isActive) {\n      return (\n        <div\n          ref={this.footerRef}\n          className={classJoin(\n            className('footer'),\n            this.config.className.footer,\n          )}\n          style={{ ...this.config.style.footer }}\n        >\n          <PluginRenderer position={PluginPosition.Footer} />\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n", "import { h, createContext, Context } from 'preact';\n\nimport Tabular from '../tabular';\nimport { BaseComponent, BaseProps } from './base';\nimport { classJoin, className } from '../util/className';\nimport { Status } from '../types';\nimport { Table } from './table/table';\nimport { HeaderContainer } from './headerContainer';\nimport { FooterContainer } from './footerContainer';\nimport Pipeline from '../pipeline/pipeline';\nimport Header from '../header';\nimport { Config } from '../config';\nimport log from '../util/log';\nimport { PipelineProcessor } from '../pipeline/processor';\n\ninterface ContainerProps extends BaseProps {\n  config: Config;\n  pipeline: Pipeline<Tabular>;\n  header?: Header;\n  width: string;\n  height: string;\n}\n\ninterface ContainerState {\n  status: Status;\n  header?: Header;\n  data?: Tabular;\n}\n\nexport class Container extends BaseComponent<ContainerProps, ContainerState> {\n  private readonly configContext: Context<Config>;\n  private processPipelineFn: (processor: PipelineProcessor<any, any>) => void;\n\n  constructor(props, context) {\n    super(props, context);\n\n    // global Config context which is passed to all components\n    this.configContext = createContext(null);\n\n    this.state = {\n      status: Status.Loading,\n      header: props.header,\n      data: null,\n    };\n  }\n\n  private async processPipeline() {\n    this.props.config.eventEmitter.emit('beforeLoad');\n\n    this.setState({\n      status: Status.Loading,\n    });\n\n    try {\n      const data = await this.props.pipeline.process();\n      this.setState({\n        data: data,\n        status: Status.Loaded,\n      });\n\n      this.props.config.eventEmitter.emit('load', data);\n    } catch (e) {\n      log.error(e);\n\n      this.setState({\n        status: Status.Error,\n        data: null,\n      });\n    }\n  }\n\n  async componentDidMount() {\n    const config = this.props.config;\n\n    // for the initial load\n    await this.processPipeline();\n\n    if (config.header && this.state.data && this.state.data.length) {\n      // now that we have the data, let's adjust columns width\n      // NOTE: that we only calculate the columns width once\n      this.setState({\n        header: config.header.adjustWidth(config),\n      });\n    }\n\n    this.processPipelineFn = this.processPipeline.bind(this);\n    this.props.pipeline.on('updated', this.processPipelineFn);\n  }\n\n  componentWillUnmount(): void {\n    this.props.pipeline.off('updated', this.processPipelineFn);\n  }\n\n  componentDidUpdate(\n    _: Readonly<ContainerProps>,\n    previousState: Readonly<ContainerState>,\n  ): void {\n    // we can't jump to the Status.Rendered if previous status is not Status.Loaded\n    if (\n      previousState.status != Status.Rendered &&\n      this.state.status == Status.Loaded\n    ) {\n      this.setState({\n        status: Status.Rendered,\n      });\n\n      this.props.config.eventEmitter.emit('ready');\n    }\n  }\n\n  render() {\n    const configContext = this.configContext;\n\n    return (\n      <configContext.Provider value={this.props.config}>\n        <div\n          role=\"complementary\"\n          className={classJoin(\n            'gridjs',\n            className('container'),\n            this.state.status === Status.Loading ? className('loading') : null,\n            this.props.config.className.container,\n          )}\n          style={{\n            ...this.props.config.style.container,\n            ...{\n              width: this.props.width,\n            },\n          }}\n        >\n          {this.state.status === Status.Loading && (\n            <div className={className('loading-bar')} />\n          )}\n\n          <HeaderContainer />\n\n          <div\n            className={className('wrapper')}\n            style={{ height: this.props.height }}\n          >\n            <Table\n              ref={this.props.config.tableRef}\n              data={this.state.data}\n              header={this.state.header}\n              width={this.props.width}\n              height={this.props.height}\n              status={this.state.status}\n            />\n          </div>\n\n          <FooterContainer />\n\n          <div\n            ref={this.props.config.tempRef}\n            id=\"gridjs-temp\"\n            className={className('temp')}\n          />\n        </div>\n      </configContext.Provider>\n    );\n  }\n}\n", "import { Config, UserConfig } from './config';\nimport { h, render, VNode } from 'preact';\nimport { Container } from './view/container';\nimport log from './util/log';\nimport { EventEmitter } from './util/eventEmitter';\nimport { GridEvents } from './events';\nimport { PluginManager } from './plugin';\n\nclass Grid extends EventEmitter<GridEvents> {\n  public config: Config;\n  public plugin: PluginManager;\n\n  constructor(userConfig?: UserConfig) {\n    super();\n    this.config = new Config({ instance: this, eventEmitter: this }).update(\n      userConfig,\n    );\n    this.plugin = this.config.plugin;\n  }\n\n  public updateConfig(userConfig: Partial<UserConfig>): this {\n    this.config.update(userConfig);\n    return this;\n  }\n\n  createElement(): VNode {\n    return h(Container, {\n      config: this.config,\n      pipeline: this.config.pipeline,\n      header: this.config.header,\n      width: this.config.width,\n      height: this.config.height,\n    });\n  }\n\n  /**\n   * Uses the existing container and tries to clear the cache\n   * and re-render the existing Grid.js instance again. This is\n   * useful when a new config is set/updated.\n   *\n   */\n  forceRender(): this {\n    if (!this.config || !this.config.container) {\n      log.error(\n        'Container is empty. Make sure you call render() before forceRender()',\n        true,\n      );\n    }\n\n    // clear the pipeline cache\n    this.config.pipeline.clearCache();\n\n    // TODO: not sure if it's a good idea to render a null element but I couldn't find a better way\n    render(null, this.config.container);\n    render(this.createElement(), this.config.container);\n\n    return this;\n  }\n\n  /**\n   * Mounts the Grid.js instance to the container\n   * and renders the instance\n   *\n   * @param container\n   */\n  render(container: Element): this {\n    if (!container) {\n      log.error('Container element cannot be null', true);\n    }\n\n    if (container.childNodes.length > 0) {\n      log.error(\n        `The container element ${container} is not empty. Make sure the container is empty and call render() again`,\n      );\n      return this;\n    }\n\n    this.config.container = container;\n    render(this.createElement(), container);\n\n    return this;\n  }\n}\n\nexport default Grid;\n"],
  "mappings": "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",
  "names": ["n", "l", "u", "i", "t", "o", "r", "f", "e", "c", "s", "a", "parentNode", "removeChild", "h", "arguments", "length", "children", "call", "defaultProps", "v", "type", "props", "key", "ref", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "vnode", "y", "current", "p", "d", "this", "context", "_", "indexOf", "k", "base", "b", "push", "g", "__r", "debounceRendering", "setTimeout", "sort", "some", "__P", "j", "__n", "ownerSVGElement", "z", "w", "x", "C", "Array", "isArray", "m", "A", "N", "M", "appendChild", "nextSibling", "insertBefore", "$", "setProperty", "test", "H", "style", "cssText", "replace", "toLowerCase", "slice", "addEventListener", "T", "I", "removeEventListener", "setAttribute", "removeAttribute", "event", "contextType", "value", "__E", "prototype", "render", "O", "sub", "state", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "L", "diffed", "localName", "nodeType", "document", "createTextNode", "createElementNS", "createElement", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "name", "__html", "innerHTML", "checked", "unmount", "componentWillUnmount", "P", "firstChild", "generateUUID", "Math", "random", "toString", "getDerivedStateFromError", "setState", "componentDidCatch", "forceUpdate", "Base", "id", "_id", "search", "placeholder", "sortAsc", "sortDesc", "pagination", "previous", "next", "navigate", "page", "pages", "showing", "of", "to", "results", "loading", "noRecordsFound", "error", "Translator", "language", "_language", "_defaultLanguage", "enUS", "getString", "message", "lang", "splitted", "split", "val", "join", "translate", "messageFormat", "translated", "BaseComponent", "translator", "_this", "config", "keys", "Object", "Component", "HTMLElement", "parentElement", "content", "html", "Cell", "ProcessorType", "update", "cast", "outerHTML", "Row", "cells", "_cells", "cell", "index", "toArray", "map", "fromCells", "Tabular", "rows", "_rows", "_length", "row", "fromRows", "fromArray", "len", "EventEmitter", "callbacks", "init", "on", "listener", "off", "eventName", "filter", "emit", "PipelineProcessor", "_props", "setProps", "process", "args", "validateProps", "Function", "result", "_process", "assign", "GlobalSearchFilter", "keyword", "String", "trim", "columns", "ignoreHiddenColumns", "tabular", "selector", "rowIndex", "cellIndex", "hidden", "element", "RegExp", "Filter", "className", "prefix", "reduce", "prev", "cur", "classJoin", "BaseStore", "PluginPosition", "dispatcher", "_state", "getInitialState", "register", "_handle", "bind", "action", "handle", "payload", "newState", "prevState", "SearchStore", "BaseActions", "dispatch", "SearchActions", "ServerGlobalSearchFilter", "options", "updates", "url", "body", "ServerFilter", "format", "toUpperCase", "throwException", "msg", "Error", "console", "warn", "info", "PluginBaseComponent", "PluginManager", "plugins", "get", "add", "plugin", "log", "remove", "splice", "list", "position", "undefined", "order", "PluginRenderer", "pluginId", "Fragment", "component", "Search", "searchProcessor", "actions", "store", "storeUpdatedFn", "enabled", "storeUpdated", "server", "header", "pipeline", "unregister", "onChange", "target", "func", "waitFor", "timeout", "onInput", "debounceTimeout", "Promise", "resolve", "clearTimeout", "PaginationLimit", "isNaN", "Number", "limit", "Limit", "ServerPaginationLimit", "ServerLimit", "Pagination", "processor", "onUpdateFn", "setTotalFromTabularFn", "total", "setTotalFromTabular", "_this2", "setTotal", "onUpdate", "resetPageOnUpdate", "setPage", "totalRows", "renderPages", "buttonsCount", "maxCount", "min", "pagePivot", "floor", "tabIndex", "role", "onClick", "title", "paginationButton", "from", "_this3", "paginationButtonCurrent", "renderSummary", "summary", "paginationSummary", "prevButton", "disabled", "paginationButtonPrev", "nextButton", "paginationButtonNext", "ceil", "width", "containerWidth", "parseInt", "px", "ShadowTable", "tableElement", "tableClassName", "tableStyle", "tableRef", "cloneNode", "zIndex", "visibility", "widths", "tableLayout", "padding", "margin", "border", "outline", "obj", "querySelectorAll", "clientWidth", "getAttribute", "minWidth", "nodeElement", "camelCase", "str", "words", "word", "charAt", "Header", "_columns", "adjustWidth", "container", "tempRef", "autoWidth", "shadowTable", "el", "tabularFormat", "concat", "column", "setSort", "userConfig", "setFixedHeader", "fixedHeader", "setResizable", "resizable", "setID", "logger", "populatePlugins", "fromColumns", "isValidElement", "typedColumn", "fromUserConfig", "fromHTMLTable", "querySelector", "th", "cols", "nextRow", "col", "leafColumns", "maximumDepth", "Dispatcher", "_callbacks", "_isDispatching", "_isHandled", "_isPending", "_lastID", "_pendingPayload", "callback", "ids", "ii", "_invokeCallback", "_startDispatching", "_stopDispatching", "isDispatching", "Storage", "MemoryStorage", "set", "ServerStorage", "handler", "response", "ok", "json", "status", "statusText", "opts", "fetch", "then", "res", "StorageUtils", "createFromUserConfig", "storage", "tableElementToArray", "display", "arr", "parsedRow", "Node", "TEXT_NODE", "DOMParser", "parseFromString", "documentElement", "textContent", "_settle", "onFulfilled", "onRejected", "thenable", "Status", "Pipeline", "steps", "_steps", "Map", "cache", "lastProcessorIndexUpdated", "step", "clearCache", "priority", "processorPropsUpdated", "addProcessorByPriority", "afterRegistered", "subSteps", "proc", "newSubStep", "first", "second", "getStepsByType", "getSortedProcessorTypes", "pact", "processorIndex", "findProcessorIndexByID", "processorID", "findIndex", "setLastProcessorIndex", "StorageExtractor", "Extractor", "ArrayToTabularTransformer", "arrayResponse", "Transformer", "ServerInitiator", "entries", "serverStorageOptions", "acc", "Initiator", "StorageResponseToArrayTransformer", "castData", "pad", "storageResponse", "PipelineUtils", "createFromConfig", "Config", "_userConfig", "defaultConfig", "updatedConfig", "height", "multiColumn", "Footer", "TD", "formatter", "handleClick", "messageCell", "eventEmitter", "getCustomAttributes", "colSpan", "td", "TR", "getColumn", "messageRow", "getChildren", "tr", "MessageRow", "TBody", "headerLength", "visibleColumns", "tbody", "Loading", "Rendered", "notfound", "NativeSort", "condition", "direction", "compare", "cellA", "cellB", "compareWrapper", "cmp", "sortedRows", "sorted", "Sort", "SortStore", "sortColumn", "multi", "sortToggle", "find", "count", "reset", "SortActions", "ServerSort", "sortProcessor", "updateStateFn", "updateSortProcessorFn", "getOrCreateSortProcessor", "updateState", "currentColumn", "updateSortProcessor", "sortedColumns", "processorType", "processors", "changeDirection", "preventDefault", "stopPropagation", "shiftKey", "sortClassName", "Resize", "moveFn", "upFn", "getPageX", "MouseEvent", "pageX", "changedTouches", "start", "fn", "wait", "inThrottle", "lastFn", "lastTime", "offsetStart", "thRef", "end", "move", "Date", "now", "max", "thElement", "onMouseDown", "onTouchStart", "TH", "sortRef", "isSortable", "isResizable", "keyDown", "which", "offsetTop", "top", "onKeyDown", "rowSpan", "THead", "renderColumn", "columnIndex", "depth", "remainingRows", "renderRow", "renderRows", "thead", "Table", "table", "HeaderContainer", "headerRef", "isActive", "FooterContainer", "footerRef", "footer", "Container", "configContext", "processPipelineFn", "Consumer", "Provider", "createContext", "processPipeline", "Loaded", "_this5", "previousState", "Grid", "instance", "updateConfig", "forceRender", "__H", "__V", "shift", "__N", "requestAnimationFrame", "cancelAnimationFrame"]
}
